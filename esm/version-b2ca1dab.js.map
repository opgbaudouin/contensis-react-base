{"version":3,"file":"version-b2ca1dab.js","sources":["../src/redux/types/navigation.js","../src/redux/reducers/navigation.ts","../src/util/merge.ts","../src/routing/redux/reducers.ts","../src/redux/types/version.js","../src/redux/reducers/version.ts","../src/redux/store/routerMiddleware.js","../src/redux/store/store.ts","../src/redux/selectors/navigation.js","../src/redux/store/injectors.js","../src/redux/actions/version.js"],"sourcesContent":["const ACTION_PREFIX = '@NAVIGATION/';\nexport const GET_NODE_TREE = `${ACTION_PREFIX}_GET_NODE_TREE`;\nexport const SET_NODE_TREE = `${ACTION_PREFIX}_SET_NODE_TREE`;\nexport const GET_NODE_TREE_ERROR = `${ACTION_PREFIX}_GET_NODE_TREE_ERROR`;\n","import { Draft, produce } from 'immer';\nimport { SET_NODE_TREE, GET_NODE_TREE_ERROR } from '~/redux/types/navigation';\n\nconst initialState = {\n  root: null,\n  isError: false,\n  isReady: false,\n};\n\nexport default produce((state: Draft<any>, action) => {\n  switch (action.type) {\n    case SET_NODE_TREE: {\n      state.root = action.nodes;\n      state.isReady = true;\n      return;\n    }\n    case GET_NODE_TREE_ERROR: {\n      state.isError = true;\n      return;\n    }\n    default:\n      return;\n  }\n}, initialState);\n","import merge from 'deepmerge';\n\nexport const combineMerge = (target: any, source: any, options: any) => {\n  const destination = target.slice();\n\n  source.forEach((item: any, index: any) => {\n    if (typeof destination[index] === 'undefined') {\n      destination[index] = options.cloneUnlessOtherwiseSpecified(item, options);\n    } else if (options.isMergeableObject(item)) {\n      destination[index] = merge(target[index], item, options);\n    } else if (target.indexOf(item) === -1) {\n      destination.push(item);\n    }\n  });\n  return destination;\n};\n","import { Draft, produce } from 'immer';\nimport merge from 'deepmerge';\n\nimport {\n  SET_ENTRY,\n  SET_NAVIGATION_PATH,\n  SET_ANCESTORS,\n  SET_TARGET_PROJECT,\n  SET_ROUTE,\n  SET_SIBLINGS,\n  SET_SURROGATE_KEYS,\n  UPDATE_LOADING_STATE,\n} from './types';\nimport { combineMerge } from '~/util/merge';\n\nconst initialState = {\n  currentHostname: null,\n  currentPath: '/',\n  currentNode: {},\n  currentNodeAncestors: [],\n  currentProject: 'unknown',\n  entryID: null,\n  entry: null,\n  error: undefined,\n  isError: false,\n  isLoading: false,\n  location: {},\n  mappedEntry: null,\n  notFound: false,\n  staticRoute: null,\n  statusCode: 200,\n};\n\nexport default produce((state: Draft<any>, action) => {\n  switch (action.type) {\n    case SET_ANCESTORS: {\n      state.currentNodeAncestors = action.ancestors;\n      return;\n    }\n    case SET_ENTRY: {\n      const {\n        entry,\n        error,\n        mappedEntry,\n        node = {},\n        isError = false,\n        isLoading = false,\n        notFound = false,\n        statusCode,\n      } = action;\n\n      let defaultStatus = 200;\n      if (notFound === true && isError === false) defaultStatus = 404;\n      else if (isError === true) defaultStatus = statusCode || 500;\n\n      if (!entry) {\n        state.entryID = null;\n        state.entry = null;\n        state.error = error;\n        state.mappedEntry = null;\n        state.isError = isError;\n        state.isLoading = isLoading;\n        state.notFound = notFound;\n        state.statusCode = statusCode || defaultStatus;\n      } else {\n        state.entryID = action.id;\n        state.entry = entry;\n        state.error = error;\n        state.isError = isError;\n        state.isLoading = isLoading;\n        state.notFound = notFound;\n        state.statusCode = statusCode || defaultStatus;\n\n        if (mappedEntry && Object.keys(mappedEntry).length > 0) {\n          state.mappedEntry = mappedEntry;\n          state.entry = { sys: entry.sys };\n        }\n      }\n\n      if (!node) {\n        state.currentNode = null;\n      } else {\n        // On Set Node, we reset all dependants.\n        state.currentNode = node;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { entry, ...nodeWithoutEntry } = node; // We have the entry stored elsewhere, so lets not keep it twice.\n        state.currentNode = nodeWithoutEntry;\n      }\n      return;\n    }\n    case UPDATE_LOADING_STATE: {\n      state.isLoading = action.isLoading;\n      return;\n    }\n    case SET_NAVIGATION_PATH: {\n      let staticRoute = {} as any;\n      if (action.staticRoute) {\n        staticRoute = { ...action.staticRoute };\n      }\n      if (action.path) {\n        // Don't run a path update on initial load as we allready should have it in redux\n        const entryUri = state?.entry?.sys?.uri;\n        if (entryUri !== action.path) {\n          state.currentPath = action.path;\n          state.location = action.location;\n          state.staticRoute = {\n            ...staticRoute,\n            route: { ...staticRoute.route, component: null },\n          };\n\n          state.isLoading = typeof window !== 'undefined';\n        } else {\n          state.location = action.location;\n          state.staticRoute = {\n            ...staticRoute,\n            route: { ...staticRoute.route, component: null },\n          };\n        }\n      }\n      return;\n    }\n    case SET_ROUTE: {\n      state.nextPath = action.path;\n      return;\n    }\n    case SET_SIBLINGS: {\n      // Can be null in some cases like the homepage.\n      let currentNodeSiblingParent = null;\n      if (action.siblings && action.siblings.length > 0) {\n        currentNodeSiblingParent = action.siblings[0].parentId;\n      }\n\n      state.currentNodeSiblings = action.siblings;\n      state.currentNodeSiblingsParent = currentNodeSiblingParent;\n      return;\n    }\n    case SET_SURROGATE_KEYS: {\n      // console.info(`SET_SURROGATE_KEYS: '${action.url}' keys: ${action.keys}`);\n      state.surrogateKeys = merge(\n        state.surrogateKeys,\n        (action.keys || '').split(' '),\n        { arrayMerge: combineMerge }\n      );\n      return;\n    }\n    case SET_TARGET_PROJECT: {\n      state.currentProject = action.project;\n      state.allowedGroups = action.allowedGroups;\n      state.currentHostname = action.hostname;\n      return;\n    }\n    default:\n      return state;\n  }\n}, initialState);\n","const VERSION_PREFIX = '@VERSION/';\nexport const SET_VERSION = `${VERSION_PREFIX}SET_VERSION`;\nexport const SET_VERSION_STATUS = `${VERSION_PREFIX}SET_VERSION_STATUS`;\n","import { Draft, produce } from 'immer';\nimport { SET_VERSION, SET_VERSION_STATUS } from '~/redux/types/version';\n\nconst initialState = {\n  commitRef: null,\n  buildNo: null,\n  contensisVersionStatus: 'published',\n};\n\nexport default produce((state: Draft<any>, action) => {\n  switch (action.type) {\n    case SET_VERSION_STATUS: {\n      state.contensisVersionStatus = action.status;\n      return;\n    }\n    case SET_VERSION: {\n      state.commitRef = action.commitRef;\n      state.buildNo = action.buildNo;\n      return;\n    }\n    default:\n      return;\n  }\n}, initialState);\n","/**\n * This middleware captures 'CALL_HISTORY_METHOD' actions to redirect to the\n * provided history object. This will prevent these actions from reaching your\n * reducer or any middleware that comes after this one.\n */\n/* eslint-disable no-unused-vars */\nconst routerMiddleware = history => store => next => action => {\n  if (action.type !== 'CALL_HISTORY_METHOD') {\n    return next(action);\n  }\n\n  const {\n    payload: { method, args },\n  } = action;\n  history[method](...args);\n};\n\nexport default routerMiddleware;\n","import {\n  applyMiddleware,\n  combineReducers,\n  compose,\n  createStore,\n  Action,\n  Store,\n  StoreEnhancer,\n} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport createSagaMiddleware, { END } from 'redux-saga';\nimport { createInjectorsEnhancer } from 'redux-injectors';\n\n// Core reducers\nimport NavigationReducer from '../reducers/navigation';\nimport RoutingReducer from '~/routing/redux/reducers';\nimport UserReducer from '~/user/redux/reducers';\nimport VersionReducer from '../reducers/version';\nimport routerMiddleware from './routerMiddleware';\nimport { AppState } from '../appstate';\nimport { History, MemoryHistory } from 'history';\nimport { StateType } from '~/config';\n\nexport let reduxStore;\n\n/* eslint-disable no-underscore-dangle */\ndeclare let window: Window &\n  typeof globalThis & {\n    __REDUX_DEVTOOLS_EXTENSION__: any;\n  };\n\nexport default async (\n  featureReducers: any,\n  initialState: AppState,\n  history: History | MemoryHistory,\n  stateType: StateType\n) => {\n  let reduxDevToolsMiddleware = f => f;\n\n  if (typeof window != 'undefined') {\n    reduxDevToolsMiddleware = window.__REDUX_DEVTOOLS_EXTENSION__\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\n      : f => f;\n  }\n\n  const sagaMiddleware = createSagaMiddleware();\n\n  const reducers = {\n    navigation: NavigationReducer,\n    routing: RoutingReducer,\n    user: UserReducer,\n    version: VersionReducer,\n    ...featureReducers,\n  };\n\n  // Reassign the combiner and fromJS functions when\n  // stateType is 'immutable' with dynamic imports\n  let combiner = combineReducers;\n  let fromJS: any = (obj: any) => obj;\n  globalThis.STATE_TYPE = stateType;\n\n  if (stateType === 'immutable') {\n    globalThis.immutable = await import(\n      /* webpackChunkName: \"immutable\" */ 'immutable'\n    );\n\n    fromJS = (\n      await import(/* webpackChunkName: \"from-js\" */ '~/util/fromJSLeaveImmer')\n    ).default;\n\n    combiner = (\n      await import(/* webpackChunkName: \"redux-immutable\" */ 'redux-immutable')\n    ).combineReducers;\n  }\n\n  const createReducer = (injectedReducers = {}) => {\n    const rootReducer = combiner<AppState>({\n      ...injectedReducers,\n      // other non-injected reducers go here\n      ...reducers,\n    });\n\n    return rootReducer;\n  };\n\n  const store = (initialState: AppState) => {\n    const runSaga = sagaMiddleware.run;\n\n    const middleware: StoreEnhancer<\n      {\n        dispatch: unknown;\n      },\n      unknown\n    > = compose(\n      applyMiddleware(\n        thunkMiddleware,\n        sagaMiddleware,\n        routerMiddleware(history)\n      ),\n      createInjectorsEnhancer({\n        createReducer,\n        runSaga,\n      }),\n      reduxDevToolsMiddleware\n    );\n\n    const store: Store<AppState, Action<any>> & {\n      runSaga?: typeof runSaga;\n      close?: () => void;\n    } = createStore<AppState, Action<any>, unknown, unknown>(\n      createReducer(),\n      initialState,\n      middleware\n    );\n\n    store.runSaga = runSaga;\n    store.close = () => store.dispatch(END);\n\n    return store;\n  };\n\n  reduxStore = store(fromJS(initialState));\n  return reduxStore;\n};\n","import { getImmutableOrJS as getIn } from '~/redux/util';\n\nexport const hasNavigationTree = state =>\n  getIn(state, ['navigation', 'isReady']);\n\nexport const selectNavigationRoot = state =>\n  getIn(state, ['navigation', 'root']);\n\nexport const selectNavigationChildren = state =>\n  getIn(state, ['navigation', 'root', 'children']);\n\nexport const selectNavigationDepends = () => [];\n","import { all } from 'redux-saga/effects';\nimport { reduxStore as DefaultStore } from './store';\n\nexport const convertSagaArray = sagas => {\n  if (Array.isArray(sagas))\n    return function* rootSaga() {\n      yield all(sagas);\n    };\n  return sagas;\n};\n\nexport const injectReducer = ({ key, reducer }, store = DefaultStore) => {\n  if (\n    Reflect.has(store.injectedReducers, key) &&\n    store.injectedReducers[key] === reducer\n  )\n    return;\n  store.injectedReducers[key] = reducer;\n\n  store.replaceReducer(store.createReducer(store.injectedReducers));\n};\n\nexport const injectSaga = ({ key, saga }, store = DefaultStore) => {\n  const rootSaga = convertSagaArray(saga);\n  let hasSaga = Reflect.has(store.injectedSagas, key);\n\n  if (process.env.NODE_ENV !== 'production') {\n    const oldDescriptor = store.injectedSagas[key]; // enable hot reloading of daemon and once-till-unmount sagas\n\n    if (hasSaga && oldDescriptor.saga !== rootSaga) {\n      oldDescriptor.task.cancel();\n      hasSaga = false;\n    }\n  }\n  console.info('injectSaga, key: ', key, 'hasSaga: ', hasSaga);\n\n  if (!hasSaga) {\n    store.injectedSagas[key] = {\n      key,\n      saga: rootSaga,\n      task: store.runSaga(rootSaga),\n    };\n  }\n};\n\nexport const injectRedux = ({ key, reducer, saga }, store = DefaultStore) => {\n  console.info('injectRedux, key: ', key);\n  if (reducer) injectReducer({ key, reducer }, store);\n  if (saga) injectSaga({ key, saga }, store);\n};\n\nexport const useInjectRedux = injectRedux;\n","import { action } from '../util';\nimport { SET_VERSION, SET_VERSION_STATUS } from '../types/version';\n\nexport const setVersion = (commitRef, buildNo) =>\n  action(SET_VERSION, { commitRef, buildNo });\n\nexport const setVersionStatus = status =>\n  action(SET_VERSION_STATUS, { status });\n"],"names":["ACTION_PREFIX","GET_NODE_TREE","SET_NODE_TREE","GET_NODE_TREE_ERROR","initialState","root","isError","isReady","produce","state","action","type","nodes","combineMerge","target","source","options","destination","slice","forEach","item","index","cloneUnlessOtherwiseSpecified","isMergeableObject","merge","indexOf","push","currentHostname","currentPath","currentNode","currentNodeAncestors","currentProject","entryID","entry","error","undefined","isLoading","location","mappedEntry","notFound","staticRoute","statusCode","SET_ANCESTORS","ancestors","SET_ENTRY","node","defaultStatus","id","Object","keys","length","sys","nodeWithoutEntry","UPDATE_LOADING_STATE","SET_NAVIGATION_PATH","path","entryUri","uri","route","component","window","SET_ROUTE","nextPath","SET_SIBLINGS","currentNodeSiblingParent","siblings","parentId","currentNodeSiblings","currentNodeSiblingsParent","SET_SURROGATE_KEYS","surrogateKeys","split","arrayMerge","SET_TARGET_PROJECT","project","allowedGroups","hostname","VERSION_PREFIX","SET_VERSION","SET_VERSION_STATUS","commitRef","buildNo","contensisVersionStatus","status","routerMiddleware","history","store","next","payload","method","args","reduxStore","featureReducers","stateType","reduxDevToolsMiddleware","f","__REDUX_DEVTOOLS_EXTENSION__","sagaMiddleware","createSagaMiddleware","reducers","navigation","NavigationReducer","routing","RoutingReducer","user","UserReducer","version","VersionReducer","combiner","combineReducers","fromJS","obj","globalThis","STATE_TYPE","immutable","default","createReducer","injectedReducers","rootReducer","runSaga","run","middleware","compose","applyMiddleware","thunkMiddleware","createInjectorsEnhancer","createStore","close","dispatch","END","hasNavigationTree","getIn","selectNavigationRoot","selectNavigationChildren","selectNavigationDepends","convertSagaArray","sagas","Array","isArray","rootSaga","all","injectReducer","key","reducer","DefaultStore","Reflect","has","replaceReducer","injectSaga","saga","hasSaga","injectedSagas","process","env","NODE_ENV","oldDescriptor","task","cancel","console","info","injectRedux","useInjectRedux","setVersion","setVersionStatus"],"mappings":"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"}