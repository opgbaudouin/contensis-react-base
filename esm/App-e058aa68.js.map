{"version":3,"file":"App-e058aa68.js","sources":["../src/redux/store/history.js","../src/redux/sagas/navigation.js","../src/util/schema.ts","../src/routing/util/expressions.ts","../src/routing/util/queries.ts","../src/routing/redux/sagas.js","../src/user/redux/sagas/register.js","../src/user/util/userHelper.js","../src/user/redux/sagas/resetPassword.js","../src/user/redux/sagas/index.js","../src/redux/sagas/index.js","../src/util/pickProject.js","../src/app/App.tsx"],"sourcesContent":["import { createBrowserHistory, createMemoryHistory } from 'history';\n\n// Create a history depending on the environment\nconst selectedHistory =\n  typeof window !== 'undefined' ? createBrowserHistory : createMemoryHistory;\n\nexport const history = (options = {}) => selectedHistory(options);\nexport const browserHistory = selectedHistory();\n","import { takeEvery, put, select } from 'redux-saga/effects';\nimport * as log from 'loglevel';\n\nimport { deliveryApi } from '~/util/ContensisDeliveryApi';\nimport {\n  GET_NODE_TREE,\n  SET_NODE_TREE,\n  GET_NODE_TREE_ERROR,\n} from '~/redux/types/navigation';\nimport { hasNavigationTree } from '~/redux/selectors/navigation';\nimport { selectVersionStatus } from '~/redux/selectors/version';\nimport { selectCurrentProject } from '~/routing/redux/selectors';\n\nexport const navigationSagas = [takeEvery(GET_NODE_TREE, ensureNodeTreeSaga)];\n\nexport function* ensureNodeTreeSaga(action) {\n  const state = yield select();\n  try {\n    if (!hasNavigationTree(state)) {\n      const deliveryApiVersionStatus = yield select(selectVersionStatus);\n      const project = yield select(selectCurrentProject);\n      const nodes = yield deliveryApi\n        .getClient(deliveryApiVersionStatus, project)\n        .nodes.getRoot({\n          depth: action.treeDepth || 0,\n        });\n      if (nodes) {\n        yield put({ type: SET_NODE_TREE, nodes });\n      } else {\n        yield put({ type: GET_NODE_TREE_ERROR });\n      }\n    }\n  } catch (ex) {\n    log.error(...['Error running ensureNodeTreeSaga:', ex]);\n    yield put({ type: GET_NODE_TREE_ERROR, error: ex.toString() });\n  }\n}\n","export const DataFormats = {\n  entry: 'entry',\n  webpage: 'webpage',\n};\n\nconst sys = {\n  contentTypeId: 'sys.contentTypeId',\n  dataFormat: 'sys.dataFormat',\n  filename: 'sys.properties.filename',\n  id: 'sys.id',\n  includeInSearch: 'sys.metadata.includeInSearch',\n  slug: 'sys.slug',\n  uri: 'sys.uri',\n  versionStatus: 'sys.versionStatus',\n};\n\nexport const Fields = {\n  entryTitle: 'entryTitle',\n  entryDescription: 'entryDescription',\n  keywords: 'keywords',\n  sys,\n  contentTypeId: 'sys.contentTypeId',\n  wildcard: '*',\n};\n\nexport const VersionStatus = {\n  published: 'published',\n  latest: 'latest',\n};\n","import { IExpression } from 'contensis-core-api';\nimport { Op } from 'contensis-delivery-api';\nimport { Fields } from '~/util/schema';\n\nexport const fieldExpression = (\n  field: string,\n  value: string | string[],\n  operator = 'equalTo',\n  weight = null\n) => {\n  if (!field || !value) return [];\n  if (Array.isArray(value)) return equalToOrIn(field, value, operator);\n  else\n    return !weight\n      ? [Op[operator](field, value)]\n      : [Op[operator](field, value).weight(weight)];\n};\n\nexport const defaultExpressions = (\n  versionStatus: 'published' | 'latest'\n): IExpression[] => {\n  return [Op.equalTo(Fields.sys.versionStatus, versionStatus)];\n};\n\nconst equalToOrIn = (field: string, arr: string[], operator = 'equalTo') =>\n  arr.length === 0\n    ? []\n    : arr.length === 1\n    ? [Op[operator](field, arr[0])]\n    : [Op.in(field, ...arr)];\n","import { Query } from '~/util/ContensisDeliveryApi';\nimport { fieldExpression, defaultExpressions } from './expressions';\n\nexport const routeEntryByFieldsQuery = (\n  id: string,\n  language = 'en-GB',\n  fields: string[] = [],\n  versionStatus: 'published' | 'latest' = 'published'\n) => {\n  const query = new Query(\n    ...[\n      ...fieldExpression('sys.id', id),\n      ...fieldExpression('sys.language', language),\n      ...defaultExpressions(versionStatus),\n    ]\n  );\n  query.fields = fields;\n  return query;\n};\n","import * as log from 'loglevel';\nimport { takeEvery, put, select, call, all } from 'redux-saga/effects';\n\nimport {\n  SET_ENTRY,\n  SET_ANCESTORS,\n  SET_NAVIGATION_PATH,\n  SET_ROUTE,\n  SET_SIBLINGS,\n  UPDATE_LOADING_STATE,\n} from './types';\nimport { GET_NODE_TREE } from '~/redux/types/navigation';\nimport {\n  selectCurrentAncestors,\n  selectCurrentNode,\n  selectCurrentProject,\n  selectCurrentSiblings,\n  selectMappedEntry,\n  selectRouteEntry,\n  selectRouteEntryEntryId,\n  selectRouteEntryLanguage,\n} from './selectors';\nimport { hasNavigationTree } from '~/redux/selectors/navigation';\nimport { selectVersionStatus } from '~/redux/selectors/version';\nimport { ensureNodeTreeSaga } from '~/redux/sagas/navigation';\nimport { handleRequiresLoginSaga } from '~/user/redux/sagas/login';\n\nimport { findContentTypeMapping } from '../util/find-contenttype-mapping';\nimport { routeEntryByFieldsQuery } from '../util/queries';\nimport { cachedSearch, deliveryApi } from '~/util/ContensisDeliveryApi';\nimport { injectRedux as reduxInjector } from '~/redux/store/injectors';\n\nexport const routingSagas = [\n  takeEvery(SET_NAVIGATION_PATH, getRouteSaga),\n  takeEvery(SET_ROUTE, setRouteSaga),\n];\n\n/**\n * To navigate / push a specific route via redux middleware\n * @param {path, state} action\n */\nfunction* setRouteSaga(action) {\n  yield put({\n    type: 'CALL_HISTORY_METHOD',\n    payload: {\n      method: 'push',\n      args: [action.path, action.state],\n    },\n  });\n}\n\nfunction* getRouteSaga(action) {\n  let entry = null;\n  try {\n    const {\n      withEvents,\n      routes: { ContentTypeMappings = {} } = {},\n      staticRoute,\n    } = action;\n\n    // Inject redux { key, reducer, saga } provided by staticRoute\n    if (staticRoute && staticRoute.route.injectRedux)\n      yield call(reduxInjectorSaga, staticRoute.route.injectRedux);\n\n    // Variables we will pass to setRouteEntry\n    let pathNode = null,\n      ancestors = null,\n      children = [],\n      siblings = null;\n\n    let contentTypeMapping = {};\n\n    // These variables are the return values from\n    // calls to withEvents.onRouteLoad and onRouteLoaded\n    let appsays,\n      requireLogin = false;\n\n    if (withEvents && withEvents.onRouteLoad) {\n      appsays = yield withEvents.onRouteLoad(action);\n    }\n\n    const staticRouteLinkDepth = staticRoute?.route?.params?.linkDepth;\n    const staticRouteFields = staticRoute?.route?.params?.fields;\n    const entryLinkDepth =\n      appsays && appsays.entryLinkDepth !== undefined\n        ? appsays.entryLinkDepth\n        : 2;\n    const setContentTypeLimits =\n      (typeof staticRouteLinkDepth === 'undefined' || !staticRouteFields) &&\n      !!ContentTypeMappings.find(\n        ct => ct.fields || ct.linkDepth || ct.nodeOptions\n      );\n\n    const state = yield select();\n    const routeEntry = selectRouteEntry(state, 'js');\n    const routeNode = selectCurrentNode(state, 'js');\n    const currentPath = action.path; //selectCurrentPath(state);\n    const deliveryApiStatus = selectVersionStatus(state);\n    const project = selectCurrentProject(state);\n    // const isHome = currentPath === '/';\n    const isPreview = currentPath && currentPath.startsWith('/preview/');\n    const defaultLang = (appsays && appsays.defaultLang) || 'en-GB';\n\n    if (\n      !isPreview &&\n      ((appsays && appsays.customRouting) ||\n        (staticRoute && !staticRoute.route.fetchNode) ||\n        (routeEntry &&\n          action.statePath === action.path &&\n          (appsays && appsays.refetchNode) !== true))\n    ) {\n      // To prevent erroneous 404s and wasted network calls, this covers\n      // - appsays customRouting and does SET_ENTRY etc. via the consuming app\n      // - all staticRoutes (where custom 'route.fetchNode' attribute is falsey)\n      // - standard Contensis SiteView Routing where we already have that entry in state\n      if (\n        routeEntry &&\n        (!staticRoute || (staticRoute.route && staticRoute.route.fetchNode))\n      ) {\n        pathNode = { ...routeNode, entry: null };\n        pathNode.entry = entry = routeEntry;\n        //Do nothing, the entry is allready the right one.\n        // yield put({\n        //   type: SET_ENTRY,\n        //   entry,\n        //   node: routeNode,\n        //   isLoading: false,\n        // });\n        yield put({\n          type: UPDATE_LOADING_STATE,\n          isLoading: false,\n        });\n      } else\n        yield call(\n          setRouteEntry,\n          routeEntry,\n          yield select(selectCurrentNode),\n          yield select(selectCurrentAncestors),\n          yield select(selectCurrentSiblings)\n        );\n    } else {\n      // Handle preview routes\n      if (isPreview) {\n        let splitPath = currentPath.split('/');\n        let entryGuid = splitPath[2];\n        let language = defaultLang;\n        if (splitPath.length >= 3) {\n          //set lang key if available in the path, else use default lang\n          //assumes preview url on content type is: http://preview.ALIAS.contensis.cloud/preview/{GUID}/{LANG}\n          if (splitPath.length == 4) language = splitPath[3];\n          // According to product dev we cannot use Node API\n          // for previewing entries as it gives a response of []\n          // -- apparently it is not correct to request latest content\n          // with Node API\n\n          let previewEntry = yield deliveryApi\n            .getClient(deliveryApiStatus, project)\n            .entries.get({\n              id: entryGuid,\n              language,\n              linkDepth: entryLinkDepth,\n            });\n          if (previewEntry) {\n            pathNode = { entry: previewEntry };\n            ({ entry } = pathNode || {});\n          }\n        }\n      } else {\n        // Handle all other routes\n        pathNode = yield cachedSearch.getNode(\n          {\n            depth: 0,\n            path: currentPath,\n            entryFields: setContentTypeLimits\n              ? ['sys.contentTypeId', 'sys.id']\n              : staticRouteFields || '*',\n            entryLinkDepth: setContentTypeLimits\n              ? 0\n              : typeof staticRouteLinkDepth !== 'undefined'\n              ? staticRouteLinkDepth\n              : entryLinkDepth,\n            language: defaultLang,\n            versionStatus: deliveryApiStatus,\n          },\n          project\n        );\n        ({ entry } = pathNode || {});\n\n        if (setContentTypeLimits && pathNode?.entry?.sys?.id) {\n          // Get fields[] and linkDepth from ContentTypeMapping to get the entry data\n          // and current node's ordinates at a specified depth with specified fields\n          contentTypeMapping =\n            findContentTypeMapping(\n              ContentTypeMappings,\n              pathNode.entry.sys.contentTypeId\n            ) || {};\n          const { fields, linkDepth } = contentTypeMapping;\n          const query = routeEntryByFieldsQuery(\n            pathNode.entry.sys.id,\n            pathNode.entry.sys.language,\n            fields,\n            deliveryApiStatus\n          );\n          const payload = yield cachedSearch.search(\n            query,\n            typeof linkDepth !== 'undefined' ? linkDepth : entryLinkDepth || 0,\n            project\n          );\n          if (payload?.items?.length > 0) {\n            pathNode.entry = entry = payload.items[0];\n          }\n        }\n      }\n\n      // make calls to fetch node ancestors, children,\n      // siblings or entire node tree\n      [ancestors, children, siblings] = yield call(\n        resolveCurrentNodeOrdinates,\n        {\n          appsays,\n          contentTypeMapping,\n          language: defaultLang,\n          path: currentPath,\n          pathNode,\n          project,\n          versionStatus: deliveryApiStatus,\n        }\n      );\n\n      if (children) pathNode.children = children;\n    }\n\n    const resolvedContentTypeMapping =\n      findContentTypeMapping(\n        ContentTypeMappings,\n        pathNode?.entry?.sys?.contentTypeId\n      ) || {};\n\n    // Inject redux { key, reducer, saga } provided by ContentTypeMapping\n    if (resolvedContentTypeMapping.injectRedux)\n      yield call(reduxInjectorSaga, resolvedContentTypeMapping.injectRedux);\n\n    if (withEvents && withEvents.onRouteLoaded) {\n      // Check if the app has provided a requireLogin boolean flag or groups array\n      // in addition to checking if requireLogin is set in the route definition\n      ({ requireLogin } =\n        (yield withEvents.onRouteLoaded({ ...action, entry })) || {});\n    }\n\n    if (requireLogin !== false) {\n      // Do not call the login feature saga if requireLogin is false\n      yield call(handleRequiresLoginSaga, {\n        ...action,\n        entry,\n        requireLogin,\n      });\n    }\n\n    if (!appsays || !appsays.preventScrollTop) {\n      // Scroll into View\n      if (typeof window !== 'undefined') window.scrollTo(0, 0);\n    }\n\n    if (pathNode?.entry?.sys?.id) {\n      entry = pathNode.entry;\n\n      yield call(\n        setRouteEntry,\n        entry,\n        pathNode,\n        ancestors,\n        siblings,\n        staticRoute?.route?.fetchNode?.entryMapper ||\n          resolvedContentTypeMapping.entryMapper,\n        false,\n        appsays?.refetchNode\n      );\n    } else {\n      if (staticRoute)\n        yield call(setRouteEntry, null, pathNode, ancestors, siblings);\n      else yield call(do404);\n    }\n  } catch (e) {\n    log.error(...['Error running route saga:', e, e.stack]);\n    yield call(do500, e);\n  }\n}\n\nfunction* resolveCurrentNodeOrdinates({\n  appsays,\n  contentTypeMapping,\n  language,\n  path,\n  pathNode,\n  project,\n  versionStatus,\n}) {\n  const apiCall = [() => null, () => null, () => null, () => null];\n\n  // if appsays customNavigation: true, we will set doNavigation to false\n  // if appsays customNavigation: { ... }, we will set doNavigation to the customNavigation object and check for child elements\n  // if appsays nothing we will set doNavigation to true and continue to do navigation calls\n  const doNavigation =\n    !appsays ||\n    (appsays?.customNavigation === true\n      ? false\n      : appsays?.customNavigation || true);\n\n  const {\n    entryLinkDepth = 0,\n    fields,\n    linkDepth,\n    nodeOptions = {},\n  } = contentTypeMapping;\n\n  if (pathNode && pathNode.id) {\n    if (doNavigation === true || doNavigation.ancestors) {\n      apiCall[0] = function* getAncestors() {\n        try {\n          return yield cachedSearch.getAncestors(\n            {\n              id: pathNode.id,\n              language,\n              versionStatus,\n            },\n            project\n          );\n        } catch (ex) {\n          log.info('Problem fetching ancestors', ex);\n          return [];\n        }\n      };\n    }\n\n    const childrenDepth =\n      doNavigation === true || doNavigation.children === true\n        ? 1\n        : (doNavigation && doNavigation.children) || 0;\n\n    if (\n      (typeof nodeOptions?.children === 'undefined' && childrenDepth > 0) ||\n      nodeOptions.children\n    ) {\n      const childrenOptions =\n        typeof nodeOptions.children === 'boolean' ? {} : nodeOptions.children;\n      apiCall[1] = function* getChildren() {\n        try {\n          return yield cachedSearch.getNode(\n            {\n              depth:\n                childrenOptions.depth !== undefined\n                  ? childrenOptions.depth\n                  : childrenDepth,\n              path,\n              entryFields: childrenOptions.fields || fields || undefined,\n              entryLinkDepth:\n                typeof childrenOptions.linkDepth !== 'undefined'\n                  ? childrenOptions.linkDepth\n                  : typeof linkDepth !== 'undefined'\n                  ? linkDepth\n                  : entryLinkDepth,\n              language,\n              versionStatus,\n            },\n            project\n          );\n        } catch (ex) {\n          log.info('Problem fetching children', ex);\n          return [];\n        }\n      };\n    }\n\n    if (\n      (typeof nodeOptions?.siblings === 'undefined' && doNavigation.siblings) ||\n      nodeOptions.siblings\n    ) {\n      apiCall[2] = function* getSiblings() {\n        try {\n          return yield cachedSearch.getSiblings(\n            {\n              id: pathNode.id,\n              entryFields: nodeOptions?.siblings?.fields || fields || undefined,\n              entryLinkDepth:\n                typeof nodeOptions?.siblings?.linkDepth !== 'undefined'\n                  ? nodeOptions.siblings.linkDepth\n                  : typeof linkDepth !== 'undefined'\n                  ? linkDepth\n                  : entryLinkDepth,\n              includeInMenu: true,\n              language,\n              versionStatus,\n            },\n            project\n          );\n        } catch (ex) {\n          log.info('Problem fetching siblings', ex);\n          return [];\n        }\n      };\n    }\n  }\n\n  const isTreeLoaded = yield select(hasNavigationTree);\n  if (!isTreeLoaded && (doNavigation === true || doNavigation.tree))\n    apiCall[3] = function* getNodeTree() {\n      const treeDepth =\n        doNavigation === true ||\n        !doNavigation.tree ||\n        doNavigation.tree === true\n          ? 2\n          : doNavigation.tree;\n\n      if (typeof window !== 'undefined') {\n        return yield put({\n          type: GET_NODE_TREE,\n          treeDepth,\n        });\n      } else {\n        return yield call(ensureNodeTreeSaga, {\n          treeDepth,\n        });\n      }\n    };\n\n  const [loadAncestors, loadChildren, loadSiblings, loadTree] = apiCall;\n  const [ancestors, nodeWithChildren, siblings] = yield all([\n    loadAncestors(),\n    loadChildren(),\n    loadSiblings(),\n    loadTree(),\n  ]);\n  return [ancestors, nodeWithChildren?.children, siblings];\n}\n\nfunction* setRouteEntry(\n  entry,\n  node,\n  ancestors,\n  siblings,\n  entryMapper,\n  notFound = false,\n  remapEntry = false\n) {\n  const entrySys = (entry && entry.sys) || {};\n\n  // Update a window global to provide the preview toolbar\n  // an updated entry id in client-side navigation\n  if (typeof window !== 'undefined') window.ContensisEntryId = entrySys.id;\n\n  const currentEntryId = yield select(selectRouteEntryEntryId);\n  const currentEntryLang = yield select(selectRouteEntryLanguage);\n  const mappedEntry =\n    currentEntryId === entrySys.id &&\n    currentEntryLang === entrySys.language &&\n    remapEntry === false\n      ? (yield select(selectMappedEntry, 'js')) || {}\n      : yield mapRouteEntry(entryMapper, {\n          ...node,\n          entry,\n          ancestors,\n          siblings,\n        });\n\n  yield all([\n    put({\n      type: SET_ENTRY,\n      id: entrySys.id,\n      entry,\n      mappedEntry,\n      node,\n      notFound,\n    }),\n    ancestors &&\n      put({\n        type: SET_ANCESTORS,\n        ancestors,\n      }),\n    siblings &&\n      put({\n        type: SET_SIBLINGS,\n        siblings,\n      }),\n  ]);\n}\n\nfunction* mapRouteEntry(entryMapper, node) {\n  try {\n    if (typeof entryMapper === 'function') {\n      const state = yield select();\n      const mappedEntry = yield call(entryMapper, node, state);\n      return mappedEntry;\n    }\n  } catch (e) {\n    log.error(...['Error running entryMapper:', e, e.stack]);\n  }\n  return;\n}\n\nfunction* do404() {\n  yield call(clientReloadHitServer);\n  yield put({\n    type: SET_ENTRY,\n    id: null,\n    entry: null,\n    notFound: true,\n  });\n}\n\nfunction* clientReloadHitServer() {\n  const stateEntry = yield select(selectRouteEntry);\n\n  // If in client and there is a stateEntry.sys field reload the page,\n  // on the 2nd load stateEntry.sys should be null at this point,\n  // we do not wish to reload again and get stuck in an infinite reloading loop\n  if (typeof window !== 'undefined' && (stateEntry?.sys || null)) {\n    window.location.reload();\n  }\n}\n\nfunction* do500(error) {\n  yield put({\n    type: SET_ENTRY,\n    id: null,\n    entry: null,\n    notFound: true,\n    isError: true,\n    error,\n    statusCode: error && error.status ? error.status : 500,\n  });\n}\n\nfunction* reduxInjectorSaga(injectorFn) {\n  if (typeof injectorFn === 'function') {\n    const { key, reducer, saga } = yield injectorFn();\n    reduxInjector({ key, reducer, saga });\n  }\n}\n","import { to } from 'await-to-js';\nimport { put, select, takeEvery } from 'redux-saga/effects';\nimport { setRoute } from '~/routing/redux/actions';\nimport { selectCurrentSearch } from '~/routing/redux/selectors';\nimport { queryParams } from '~/util/navigation';\nimport {\n  REGISTER_USER,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_FAILED,\n} from '../types';\n\nexport const registerSagas = [\n  takeEvery(REGISTER_USER, registerSaga),\n  takeEvery(REGISTER_USER_SUCCESS, redirectSaga),\n];\n\nfunction* registerSaga({ user, mappers }) {\n  let requestBody = user;\n  // Allow use of request mapper to take a user object\n  // of any format and return the payload for the api request\n  if (mappers && mappers.request && typeof mappers.request === 'function') {\n    requestBody = yield mappers.request(user);\n  }\n\n  // Make POST call to register API\n  const response = yield fetch('/account/register', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(requestBody),\n  });\n\n  if (response.ok) {\n    let mappedResponse;\n    const [, responseBody] = yield to(response.json());\n    if (responseBody) {\n      // Allow use of response mapper to convert the successful user object\n      // from the api response body into a user object of any format\n      if (\n        mappers &&\n        mappers.response &&\n        typeof mappers.response === 'function'\n      ) {\n        mappedResponse = yield mappers.response(responseBody);\n      }\n      // Update user object with mappedResponse or responseBody\n      yield put({\n        type: REGISTER_USER_SUCCESS,\n        user: mappedResponse || responseBody,\n      });\n    } else {\n      // OK response but unable to parse the response body\n      yield put({\n        type: REGISTER_USER_FAILED,\n        error: {\n          message:\n            'Unable to parse the created user from the register service response',\n        },\n      });\n    }\n  } else {\n    // Not OK responses, these can be due to service availability\n    // or status codes echoed from the responses received from\n    // management api when registering the user\n    const [, errorResponse] = yield to(response.json());\n    const error = (errorResponse && errorResponse.error) || errorResponse || {};\n    // Get something meaningful from the response if there is no message in the body\n    if (!error.message) {\n      error.message = `Registration service: ${response.statusText}`;\n      error.status = response.status;\n    }\n    yield put({\n      type: REGISTER_USER_FAILED,\n      error,\n    });\n  }\n}\n\nfunction* redirectSaga() {\n  // Check if querystring contains a redirect_uri\n  const currentQs = queryParams(yield select(selectCurrentSearch));\n  const redirectUri = currentQs.redirect_uri || currentQs.redirect;\n\n  // We must use redux based navigation to preserve the registration state\n  if (redirectUri) yield put(setRoute(redirectUri));\n}\n","const PAP_URL = 'https://pap.zengenti.com';\n\nconst USER_ENVS_URI = 'my-environments';\nconst USER_RESEND_VERIFICATION_URI = 'account/verify/resend';\nconst USER_REQUEST_PASSWORD_RESET_URI = 'account/reset';\nconst USER_RESET_PASSWORD_URI = 'account/reset/password';\n\nconst USER_ENVS_URL = `${PAP_URL}/${USER_ENVS_URI}`;\n\nconst BASE_OPTIONS = {\n  method: 'GET',\n  headers: { 'Content-Type': 'application/json' },\n};\n\nexport class UserHelper {\n  static async GetUsersEnvironments(securityToken) {\n    const options = {\n      ...BASE_OPTIONS,\n      headers: {\n        'x-security-token': securityToken,\n      },\n    };\n    return await UserHelper.get(USER_ENVS_URL, options);\n  }\n  static async ResendUserVerification(userEmail) {\n    const options = {\n      ...BASE_OPTIONS,\n    };\n    return await UserHelper.get(\n      `/${USER_RESEND_VERIFICATION_URI}?user=${userEmail}`,\n      options\n    );\n  }\n  static async RequestPasswordReset(userEmailObject) {\n    const options = {\n      ...BASE_OPTIONS,\n      body: JSON.stringify(userEmailObject),\n    };\n    options.method = 'POST';\n\n    return await UserHelper.get(`/${USER_REQUEST_PASSWORD_RESET_URI}`, options);\n  }\n  static async ResetPassword(resetPasswordObject) {\n    const options = {\n      ...BASE_OPTIONS,\n      body: JSON.stringify(resetPasswordObject),\n    };\n    options.method = 'POST';\n\n    return await UserHelper.get(`/${USER_RESET_PASSWORD_URI}`, options);\n  }\n\n  static async get(url, options = BASE_OPTIONS) {\n    try {\n      const responseBody = await api(url, options);\n      return responseBody;\n    } catch (err) {\n      return { error: { message: err.message } };\n    }\n  }\n}\n\nasync function api(url, options) {\n  return fetch(url, options)\n    .then(async response => {\n      return response.json().then(data => data);\n    })\n    .catch(error => {\n      throw error;\n    });\n}\n","import { put, takeEvery, select } from 'redux-saga/effects';\nimport { to } from 'await-to-js';\nimport { getManagementApiClient } from '~/user/util/ContensisManagementApi';\nimport { UserHelper } from '~/user/util/userHelper';\nimport { selectClientCredentials } from '../selectors';\nimport {\n  REQUEST_USER_PASSWORD_RESET,\n  RESET_USER_PASSWORD,\n  REQUEST_USER_PASSWORD_RESET_ERROR,\n  REQUEST_USER_PASSWORD_RESET_SENDING,\n  REQUEST_USER_PASSWORD_RESET_SUCCESS,\n  RESET_USER_PASSWORD_ERROR,\n  RESET_USER_PASSWORD_SENDING,\n  RESET_USER_PASSWORD_SUCCESS,\n  CHANGE_USER_PASSWORD,\n  CHANGE_USER_PASSWORD_SENDING,\n  CHANGE_USER_PASSWORD_SUCCESS,\n  CHANGE_USER_PASSWORD_ERROR,\n} from '../types';\n\nexport const resetPasswordSagas = [\n  takeEvery(REQUEST_USER_PASSWORD_RESET, requestPasswordResetSaga),\n  takeEvery(RESET_USER_PASSWORD, resetPasswordSaga),\n  takeEvery(CHANGE_USER_PASSWORD, changePasswordSaga),\n];\n\nfunction* requestPasswordResetSaga(action) {\n  const userEmailObject = action.userEmailObject;\n  yield put({\n    type: REQUEST_USER_PASSWORD_RESET_SENDING,\n  });\n  if (userEmailObject && userEmailObject.userEmail) {\n    try {\n      const passwordResetRequestResponse =\n        yield UserHelper.RequestPasswordReset(userEmailObject);\n\n      if (passwordResetRequestResponse) {\n        if (!passwordResetRequestResponse.error) {\n          yield put({\n            type: REQUEST_USER_PASSWORD_RESET_SUCCESS,\n          });\n        } else {\n          yield put({\n            type: REQUEST_USER_PASSWORD_RESET_ERROR,\n            error: passwordResetRequestResponse.error.message,\n          });\n        }\n      } else {\n        yield put({\n          type: REQUEST_USER_PASSWORD_RESET_ERROR,\n          error: 'No response from server',\n        });\n      }\n    } catch (error) {\n      yield put({\n        type: REQUEST_USER_PASSWORD_RESET_ERROR,\n        error: error && error.toString(),\n      });\n    }\n  } else {\n    yield put({\n      type: REQUEST_USER_PASSWORD_RESET_ERROR,\n      error: 'Invalid object',\n    });\n  }\n}\n\nfunction* resetPasswordSaga(action) {\n  const resetPasswordObject = action.resetPasswordObject;\n\n  yield put({\n    type: RESET_USER_PASSWORD_SENDING,\n  });\n  if (resetPasswordObject.token && resetPasswordObject.password) {\n    try {\n      const resetPasswordResponse = yield UserHelper.ResetPassword(\n        resetPasswordObject\n      );\n\n      if (resetPasswordResponse) {\n        if (!resetPasswordResponse.error) {\n          yield put({\n            type: RESET_USER_PASSWORD_SUCCESS,\n          });\n        } else {\n          const error =\n            (resetPasswordResponse.error.data &&\n              resetPasswordResponse.error.data.length > 0 &&\n              resetPasswordResponse.error.data[0].message) ||\n            resetPasswordResponse.error.message;\n          yield put({\n            type: RESET_USER_PASSWORD_ERROR,\n            error,\n          });\n        }\n      } else {\n        yield put({\n          type: RESET_USER_PASSWORD_ERROR,\n          error: 'No response from server',\n        });\n      }\n    } catch (error) {\n      yield put({\n        type: RESET_USER_PASSWORD_ERROR,\n        error: error && error.toString(),\n      });\n    }\n  } else {\n    yield put({\n      type: RESET_USER_PASSWORD_ERROR,\n      error: 'Invalid object',\n    });\n  }\n}\n\n// userId\n// existingPassword\n// newPassword\nfunction* changePasswordSaga(action) {\n  if (\n    !action ||\n    !action.userId ||\n    !action.currentPassword ||\n    !action.newPassword\n  ) {\n    yield put({\n      type: CHANGE_USER_PASSWORD_ERROR,\n      error: 'Invalid action object sent to changePassword saga',\n    });\n    return;\n  }\n\n  try {\n    const changePasswordObject = {\n      userId: action.userId,\n      existing: action.currentPassword,\n      new: action.newPassword,\n    };\n\n    yield put({\n      type: CHANGE_USER_PASSWORD_SENDING,\n    });\n    const clientCredentials = yield select(selectClientCredentials, 'js');\n    const client = yield getManagementApiClient({ ...clientCredentials });\n\n    const [err, res] = yield to(\n      client.security.users.updatePassword(changePasswordObject)\n    );\n\n    if (err) {\n      const error =\n        (err?.data?.data?.length > 0 && err.data.data[0].message) ||\n        err?.data?.message;\n      yield put({\n        type: CHANGE_USER_PASSWORD_ERROR,\n        error,\n      });\n      return;\n    }\n\n    // // eslint-disable-next-line no-console\n    // console.log(changePasswordObject);\n    // // eslint-disable-next-line no-console\n    // console.log(userCredentialsObject);\n    yield put({\n      type: CHANGE_USER_PASSWORD_SUCCESS,\n    });\n  } catch (error) {\n    yield put({\n      type: CHANGE_USER_PASSWORD_ERROR,\n      error: error && error.toString(),\n    });\n  }\n}\n","import { loginSagas } from './login';\nimport { registerSagas } from './register';\nimport { resetPasswordSagas } from './resetPassword';\n\nexport const userSagas = [\n  ...loginSagas,\n  ...registerSagas,\n  ...resetPasswordSagas,\n];\n","// index.js\nimport { all } from 'redux-saga/effects';\nimport { navigationSagas } from './navigation';\nimport { routingSagas } from '~/routing/redux/sagas';\nimport { userSagas } from '~/user/redux/sagas';\n\nexport default function (featureSagas = []) {\n  return function* rootSaga() {\n    const subSagas = [...routingSagas, ...navigationSagas, ...userSagas];\n    yield all([...subSagas, ...featureSagas]);\n  };\n}\n","const servers = SERVERS; /* global SERVERS */\nconst alias = servers.alias.toLowerCase();\nconst publicUri = PUBLIC_URI; /* global PUBLIC_URI */\nconst projects = PROJECTS; /* global PROJECTS */\n\n// return a projectId via the request hostname\nconst pickProject = (hostname, query) => {\n  // if localhost we can only infer via a querystring, and take your word for it\n  if (hostname == 'localhost') {\n    return (query && query.p) || projects[0].id;\n  }\n\n  // if hostname is the actual public uri we can return the first project from the list\n  if (hostname == publicUri) {\n    return projects[0].id;\n  }\n\n  let project = 'unknown';\n\n  // // go through all the defined projects\n  // Object.entries(projects).map(([, p]) => {\n  const p = projects[0];\n\n  // check if we're accessing via the project's public uri\n  if (hostname.includes(p.publicUri)) project = p.id;\n\n  // the url structure is different for website (we don't prefix)\n  if (p.id.startsWith('website')) {\n    // check for internal and external hostnames\n    // we check live and preview distinctly so our rule does not clash with\n    // hostnames that use a project prefix\n    if (\n      hostname.includes(`live-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`live.${alias}.contensis.cloud`) ||\n      hostname.includes(`preview-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`preview.${alias}.contensis.cloud`)\n    )\n      project = p.id;\n  } else {\n    // check for internal and external hostnames, prefixed with the projectId\n    if (\n      hostname.includes(`${p.id.toLowerCase()}-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`${p.id.toLowerCase()}.${alias}.contensis.cloud`)\n    )\n      project = p.id;\n  }\n  // });\n  return project === 'unknown' ? p.id : project;\n};\n\nexport default pickProject;\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { AppRootProps } from '../routing/routes';\nimport { RouteLoader } from '../routing';\n\nconst AppRoot = (props: AppRootProps) => {\n  return <RouteLoader {...props} />;\n};\n\nexport default hot(module)(AppRoot);\n"],"names":["selectedHistory","window","createBrowserHistory","createMemoryHistory","history","options","browserHistory","navigationSagas","takeEvery","GET_NODE_TREE","ensureNodeTreeSaga","action","state","select","hasNavigationTree","deliveryApiVersionStatus","selectVersionStatus","project","selectCurrentProject","nodes","deliveryApi","getClient","getRoot","depth","treeDepth","put","type","SET_NODE_TREE","GET_NODE_TREE_ERROR","ex","log","error","toString","sys","contentTypeId","dataFormat","filename","id","includeInSearch","slug","uri","versionStatus","Fields","entryTitle","entryDescription","keywords","wildcard","fieldExpression","field","value","operator","weight","Array","isArray","equalToOrIn","Op","defaultExpressions","equalTo","arr","length","in","routeEntryByFieldsQuery","language","fields","query","Query","routingSagas","SET_NAVIGATION_PATH","getRouteSaga","SET_ROUTE","setRouteSaga","payload","method","args","path","entry","withEvents","routes","ContentTypeMappings","staticRoute","route","injectRedux","call","reduxInjectorSaga","pathNode","ancestors","children","siblings","contentTypeMapping","appsays","requireLogin","onRouteLoad","staticRouteLinkDepth","params","linkDepth","staticRouteFields","entryLinkDepth","undefined","setContentTypeLimits","find","ct","nodeOptions","routeEntry","selectRouteEntry","routeNode","selectCurrentNode","currentPath","deliveryApiStatus","isPreview","startsWith","defaultLang","customRouting","fetchNode","statePath","refetchNode","UPDATE_LOADING_STATE","isLoading","setRouteEntry","selectCurrentAncestors","selectCurrentSiblings","splitPath","split","entryGuid","previewEntry","entries","get","cachedSearch","getNode","entryFields","findContentTypeMapping","search","items","resolveCurrentNodeOrdinates","resolvedContentTypeMapping","onRouteLoaded","handleRequiresLoginSaga","preventScrollTop","scrollTo","entryMapper","do404","e","stack","do500","apiCall","doNavigation","customNavigation","getAncestors","info","childrenDepth","childrenOptions","getChildren","getSiblings","includeInMenu","isTreeLoaded","tree","getNodeTree","loadAncestors","loadChildren","loadSiblings","loadTree","nodeWithChildren","all","node","notFound","remapEntry","entrySys","ContensisEntryId","currentEntryId","selectRouteEntryEntryId","currentEntryLang","selectRouteEntryLanguage","mappedEntry","selectMappedEntry","mapRouteEntry","SET_ENTRY","SET_ANCESTORS","SET_SIBLINGS","clientReloadHitServer","stateEntry","location","reload","isError","statusCode","status","injectorFn","key","reducer","saga","reduxInjector","registerSagas","REGISTER_USER","registerSaga","REGISTER_USER_SUCCESS","redirectSaga","user","mappers","requestBody","request","response","fetch","headers","Accept","body","JSON","stringify","ok","mappedResponse","responseBody","to","json","REGISTER_USER_FAILED","message","errorResponse","statusText","currentQs","queryParams","selectCurrentSearch","redirectUri","redirect_uri","redirect","setRoute","PAP_URL","USER_ENVS_URI","USER_RESEND_VERIFICATION_URI","USER_REQUEST_PASSWORD_RESET_URI","USER_RESET_PASSWORD_URI","USER_ENVS_URL","BASE_OPTIONS","UserHelper","GetUsersEnvironments","securityToken","ResendUserVerification","userEmail","RequestPasswordReset","userEmailObject","ResetPassword","resetPasswordObject","url","api","err","then","data","catch","resetPasswordSagas","REQUEST_USER_PASSWORD_RESET","requestPasswordResetSaga","RESET_USER_PASSWORD","resetPasswordSaga","CHANGE_USER_PASSWORD","changePasswordSaga","REQUEST_USER_PASSWORD_RESET_SENDING","passwordResetRequestResponse","REQUEST_USER_PASSWORD_RESET_SUCCESS","REQUEST_USER_PASSWORD_RESET_ERROR","RESET_USER_PASSWORD_SENDING","token","password","resetPasswordResponse","RESET_USER_PASSWORD_SUCCESS","RESET_USER_PASSWORD_ERROR","userId","currentPassword","newPassword","CHANGE_USER_PASSWORD_ERROR","changePasswordObject","existing","new","CHANGE_USER_PASSWORD_SENDING","clientCredentials","selectClientCredentials","client","getManagementApiClient","res","security","users","updatePassword","CHANGE_USER_PASSWORD_SUCCESS","userSagas","loginSagas","featureSagas","rootSaga","subSagas","servers","SERVERS","alias","toLowerCase","publicUri","PUBLIC_URI","projects","PROJECTS","pickProject","hostname","p","includes","AppRoot","props"],"mappings":"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"}