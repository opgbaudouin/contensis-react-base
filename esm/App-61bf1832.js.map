{"version":3,"file":"App-61bf1832.js","sources":["../src/util/ContensisDeliveryApi.js","../src/redux/store/history.js","../src/redux/sagas/navigation.js","../src/util/schema.ts","../src/routing/util/expressions.ts","../src/routing/util/queries.ts","../src/routing/redux/sagas.js","../src/user/redux/sagas/register.js","../src/user/util/userHelper.js","../src/user/redux/sagas/resetPassword.js","../src/user/redux/sagas/index.js","../src/redux/sagas/index.js","../src/util/pickProject.js","../src/app/App.tsx"],"sourcesContent":["import { Client } from 'contensis-delivery-api';\nimport { setSurrogateKeys } from '../routing/redux/actions';\nimport { reduxStore } from '~/redux/store/store';\n\nconst storeSurrogateKeys = response => {\n  const keys = response.headers.get\n    ? response.headers.get('surrogate-key')\n    : response.headers.map['surrogate-key'];\n  if (keys) reduxStore?.dispatch(setSurrogateKeys(keys, response.url));\n};\n\nconst getClientConfig = project => {\n  let config = DELIVERY_API_CONFIG; /* global DELIVERY_API_CONFIG */\n  config.responseHandler = {};\n\n  if (project) {\n    config.projectId = project;\n  }\n\n  // we only want the surrogate key header in a server context\n  if (typeof window === 'undefined') {\n    config.defaultHeaders = {\n      'x-require-surrogate-key': true,\n    };\n    config.responseHandler[200] = storeSurrogateKeys;\n  }\n\n  if (\n    typeof window !== 'undefined' &&\n    PROXY_DELIVERY_API /* global PROXY_DELIVERY_API */\n  ) {\n    // ensure a relative url is used to bypass the need for CORS (separate OPTIONS calls)\n    config.rootUrl = '';\n    config.responseHandler[404] = () => null;\n  }\n  return config;\n};\n\nexport * from 'contensis-delivery-api';\n\nclass DeliveryApi {\n  getClientSideVersionStatus = () => {\n    if (typeof window != 'undefined') {\n      const currentHostname = window.location.hostname;\n      return this.getVersionStatusFromHostname(currentHostname);\n    }\n    return null;\n  };\n  getVersionStatusFromHostname = currentHostname => {\n    if (currentHostname.indexOf('localhost') > -1) return 'latest';\n\n    if (currentHostname.endsWith('contensis.cloud')) {\n      if (currentHostname.indexOf('preview.') > -1) {\n        return 'latest';\n      } else {\n        return 'published';\n      }\n    }\n\n    if (currentHostname.endsWith('cloud.contensis.com')) {\n      if (currentHostname.indexOf('preview-') > -1) {\n        return 'latest';\n      } else {\n        return 'published';\n      }\n    }\n\n    return 'published';\n  };\n  search = (query, linkDepth, project, env) => {\n    const client = Client.create(getClientConfig(project, env));\n    return client.entries.search(\n      query,\n      typeof linkDepth !== 'undefined' ? linkDepth : 1\n    );\n  };\n  getClient = (deliveryApiStatus = 'published', project, env) => {\n    const baseConfig = getClientConfig(project, env);\n    baseConfig.versionStatus = deliveryApiStatus;\n    return Client.create(baseConfig);\n  };\n  getEntry = (\n    id,\n    linkDepth = 0,\n    deliveryApiStatus = 'published',\n    project,\n    env\n  ) => {\n    const baseConfig = getClientConfig(project, env);\n    baseConfig.versionStatus = deliveryApiStatus;\n    const client = Client.create(baseConfig);\n    // return client.entries.get(id, linkDepth);\n    return client.entries.get({ id, linkDepth });\n  };\n}\n\nexport const deliveryApi = new DeliveryApi();\n\nclass CacheNode {\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n    this.next = null;\n    this.prev = null;\n  }\n}\n\nclass LruCache {\n  constructor(limit = 100) {\n    this.map = {};\n    this.head = null;\n    this.tail = null;\n    this.limit = limit || 100;\n    this.size = 0;\n  }\n\n  get(key) {\n    if (this.map[key]) {\n      let value = this.map[key].value;\n      let node = new CacheNode(key, value);\n      this.remove(key);\n      this.setHead(node);\n      return value;\n    }\n  }\n\n  set(key, value) {\n    let node = new CacheNode(key, value);\n    if (this.map[key]) {\n      this.remove(key);\n    } else {\n      if (this.size >= this.limit) {\n        delete this.map[this.tail.key];\n        this.size--;\n        this.tail = this.tail.prev;\n        this.tail.next = null;\n      }\n    }\n    this.setHead(node);\n  }\n\n  setHead(node) {\n    node.next = this.head;\n    node.prev = null;\n    if (this.head) {\n      this.head.prev = node;\n    }\n    this.head = node;\n    if (!this.tail) {\n      this.tail = node;\n    }\n    this.size++;\n    this.map[node.key] = node;\n  }\n\n  remove(key) {\n    let node = this.map[key];\n    if (node.prev) {\n      node.prev.next = node.next;\n    } else {\n      this.head = node.next;\n    }\n    if (node.next) {\n      node.next.prev = node.prev;\n    } else {\n      this.tail = node.prev;\n    }\n    delete this.map[key];\n    this.size--;\n  }\n}\n\nclass CachedSearch {\n  cache = new LruCache();\n  taxonomyLookup = {};\n\n  search(query, linkDepth, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      project + JSON.stringify(query) + linkDepth.toString(),\n      () => client.entries.search(query, linkDepth)\n    );\n  }\n\n  searchUsingPost(query, linkDepth = 0, project = '', env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      project + JSON.stringify(query) + linkDepth.toString(),\n      () => client.entries.searchUsingPost(query, linkDepth)\n    );\n  }\n\n  get(id, linkDepth, versionStatus, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    client.clientConfig.versionStatus = versionStatus;\n    return this.request(id, () => client.entries.get({ id, linkDepth }));\n  }\n\n  getContentType(id, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(`[CONTENT TYPE] ${id} ${project}`, () =>\n      client.contentTypes.get(id)\n    );\n  }\n\n  getTaxonomyNode(key, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(`[TAXONOMY NODE] ${key}`, () =>\n      client.taxonomy\n        .resolveChildren(key)\n        .then(node => this.extendTaxonomyNode(node))\n    );\n  }\n\n  getRootNode(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(`${project} / ${JSON.stringify(options)}`, () =>\n      client.nodes.getRoot(options)\n    );\n  }\n\n  getNode(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} ${(options && options.path) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.get(options)\n    );\n  }\n\n  getAncestors(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} [A] ${(options && options.id) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.getAncestors(options)\n    );\n  }\n\n  getChildren(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} [C] ${(options && options.id) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.getChildren(options)\n    );\n  }\n\n  getSiblings(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} [S] ${(options && options.id) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.getSiblings(options)\n    );\n  }\n\n  request(key, execute) {\n    if (!this.cache.get(key) || typeof window == 'undefined') {\n      let promise = execute();\n      this.cache.set(key, promise);\n      promise.catch(() => {\n        this.cache.remove(key);\n      });\n    }\n    return this.cache.get(key);\n  }\n}\n\nexport const cachedSearch = new CachedSearch();\n","import { createBrowserHistory, createMemoryHistory } from 'history';\n\n// Create a history depending on the environment\nconst selectedHistory =\n  typeof window !== 'undefined' ? createBrowserHistory : createMemoryHistory;\n\nexport const history = (options = {}) => selectedHistory(options);\nexport const browserHistory = selectedHistory();\n","import { takeEvery, put, select } from 'redux-saga/effects';\n\nimport { deliveryApi } from '~/util/ContensisDeliveryApi';\nimport {\n  GET_NODE_TREE,\n  SET_NODE_TREE,\n  GET_NODE_TREE_ERROR,\n} from '~/redux/types/navigation';\nimport { hasNavigationTree } from '~/redux/selectors/navigation';\nimport { selectVersionStatus } from '~/redux/selectors/version';\nimport { selectCurrentProject } from '~/routing/redux/selectors';\n\nexport const navigationSagas = [takeEvery(GET_NODE_TREE, ensureNodeTreeSaga)];\n\nexport function* ensureNodeTreeSaga(action) {\n  const state = yield select();\n  try {\n    if (!hasNavigationTree(state)) {\n      const deliveryApiVersionStatus = yield select(selectVersionStatus);\n      const project = yield select(selectCurrentProject);\n      const nodes = yield deliveryApi\n        .getClient(deliveryApiVersionStatus, project)\n        .nodes.getRoot({\n          depth: action.treeDepth || 0,\n        });\n      if (nodes) {\n        yield put({ type: SET_NODE_TREE, nodes });\n      } else {\n        yield put({ type: GET_NODE_TREE_ERROR });\n      }\n    }\n  } catch (ex) {\n    yield put({ type: GET_NODE_TREE_ERROR, error: ex.toString() });\n  }\n}\n","export const DataFormats = {\n  entry: 'entry',\n  webpage: 'webpage',\n};\n\nconst sys = {\n  contentTypeId: 'sys.contentTypeId',\n  dataFormat: 'sys.dataFormat',\n  filename: 'sys.properties.filename',\n  id: 'sys.id',\n  includeInSearch: 'sys.metadata.includeInSearch',\n  slug: 'sys.slug',\n  uri: 'sys.uri',\n  versionStatus: 'sys.versionStatus',\n};\n\nexport const Fields = {\n  entryTitle: 'entryTitle',\n  entryDescription: 'entryDescription',\n  keywords: 'keywords',\n  sys,\n  contentTypeId: 'sys.contentTypeId',\n  wildcard: '*',\n};\n\nexport const VersionStatus = {\n  published: 'published',\n  latest: 'latest',\n};\n","import { IExpression } from 'contensis-core-api';\nimport { Op } from 'contensis-delivery-api';\nimport { Fields } from '~/util/schema';\n\nexport const fieldExpression = (\n  field: string,\n  value: string | string[],\n  operator = 'equalTo',\n  weight = null\n) => {\n  if (!field || !value) return [];\n  if (Array.isArray(value)) return equalToOrIn(field, value, operator);\n  else\n    return !weight\n      ? [Op[operator](field, value)]\n      : [Op[operator](field, value).weight(weight)];\n};\n\nexport const defaultExpressions = (\n  versionStatus: 'published' | 'latest'\n): IExpression[] => {\n  return [Op.equalTo(Fields.sys.versionStatus, versionStatus)];\n};\n\nconst equalToOrIn = (field: string, arr: string[], operator = 'equalTo') =>\n  arr.length === 0\n    ? []\n    : arr.length === 1\n    ? [Op[operator](field, arr[0])]\n    : [Op.in(field, ...arr)];\n","import { Query } from '~/util/ContensisDeliveryApi';\nimport { fieldExpression, defaultExpressions } from './expressions';\n\nexport const routeEntryByFieldsQuery = (\n  id: string,\n  language = 'en-GB',\n  fields: string[] = [],\n  versionStatus: 'published' | 'latest' = 'published'\n) => {\n  const query = new Query(\n    ...[\n      ...fieldExpression('sys.id', id),\n      ...fieldExpression('sys.language', language),\n      ...defaultExpressions(versionStatus),\n    ]\n  );\n  query.fields = fields;\n  return query;\n};\n","import * as log from 'loglevel';\nimport { takeEvery, put, select, call, all } from 'redux-saga/effects';\n\nimport {\n  SET_ENTRY,\n  SET_ANCESTORS,\n  SET_NAVIGATION_PATH,\n  SET_ROUTE,\n  SET_SIBLINGS,\n  UPDATE_LOADING_STATE,\n} from './types';\nimport { GET_NODE_TREE } from '~/redux/types/navigation';\nimport {\n  selectCurrentAncestors,\n  selectCurrentNode,\n  selectCurrentProject,\n  selectMappedEntry,\n  selectRouteEntry,\n  selectRouteEntryEntryId,\n  selectRouteEntryLanguage,\n} from './selectors';\nimport { hasNavigationTree } from '~/redux/selectors/navigation';\nimport { selectVersionStatus } from '~/redux/selectors/version';\nimport { ensureNodeTreeSaga } from '~/redux/sagas/navigation';\nimport { handleRequiresLoginSaga } from '~/user/redux/sagas/login';\n\nimport { findContentTypeMapping } from '../util/find-contenttype-mapping';\nimport { routeEntryByFieldsQuery } from '../util/queries';\nimport { cachedSearch, deliveryApi } from '~/util/ContensisDeliveryApi';\nimport { injectRedux as reduxInjector } from '~/redux/store/injectors';\n\nexport const routingSagas = [\n  takeEvery(SET_NAVIGATION_PATH, getRouteSaga),\n  takeEvery(SET_ROUTE, setRouteSaga),\n];\n\n/**\n * To navigate / push a specific route via redux middleware\n * @param {path, state} action\n */\nfunction* setRouteSaga(action) {\n  yield put({\n    type: 'CALL_HISTORY_METHOD',\n    payload: {\n      method: 'push',\n      args: [action.path, action.state],\n    },\n  });\n}\n\nfunction* getRouteSaga(action) {\n  let entry = null;\n  try {\n    const {\n      withEvents,\n      routes: { ContentTypeMappings = {} } = {},\n      staticRoute,\n    } = action;\n\n    // Inject redux { key, reducer, saga } provided by staticRoute\n    if (staticRoute && staticRoute.route.injectRedux)\n      yield call(reduxInjectorSaga, staticRoute.route.injectRedux);\n\n    // Variables we will pass to setRouteEntry\n    let pathNode = null,\n      ancestors = null,\n      siblings = null;\n\n    // These variables are the return values from\n    // calls to withEvents.onRouteLoad and onRouteLoaded\n    let appsays,\n      requireLogin = false;\n\n    if (withEvents && withEvents.onRouteLoad) {\n      appsays = yield withEvents.onRouteLoad(action);\n    }\n    // if appsays customNavigation: true, we will set doNavigation to false\n    // if appsays customNavigation: { ... }, we will set doNavigation to the customNavigation object and check for child elements\n    // if appsays nothing we will set doNavigation to true and continue to do navigation calls\n    const doNavigation =\n      !appsays ||\n      (appsays && appsays.customNavigation === true\n        ? false\n        : (appsays && appsays.customNavigation) || true);\n\n    const entryLinkDepth =\n      appsays && appsays.entryLinkDepth !== undefined\n        ? appsays.entryLinkDepth\n        : 3;\n    const setContentTypeLimits = !!ContentTypeMappings.find(\n      ct => ct.fields || ct.linkDepth || ct.nodeOptions\n    );\n\n    const state = yield select();\n    const routeEntry = selectRouteEntry(state, 'js');\n    const routeNode = selectCurrentNode(state, 'js');\n    const currentPath = action.path; //selectCurrentPath(state);\n    const deliveryApiStatus = selectVersionStatus(state);\n    const project = selectCurrentProject(state);\n    // const isHome = currentPath === '/';\n    const isPreview = currentPath && currentPath.startsWith('/preview/');\n    const defaultLang = (appsays && appsays.defaultLang) || 'en-GB';\n\n    if (\n      !isPreview &&\n      ((appsays && appsays.customRouting) ||\n        (staticRoute && !staticRoute.route.fetchNode) ||\n        (routeEntry &&\n          action.statePath === action.path &&\n          (appsays && appsays.refetchNode) !== true))\n    ) {\n      // To prevent erroneous 404s and wasted network calls, this covers\n      // - appsays customRouting and does SET_ENTRY etc. via the consuming app\n      // - all staticRoutes (where custom 'route.fetchNode' attribute is falsey)\n      // - standard Contensis SiteView Routing where we already have that entry in state\n      if (\n        routeEntry &&\n        (!staticRoute || (staticRoute.route && staticRoute.route.fetchNode))\n      ) {\n        pathNode = { ...routeNode, entry: null };\n        pathNode.entry = entry = routeEntry;\n        //Do nothing, the entry is allready the right one.\n        // yield put({\n        //   type: SET_ENTRY,\n        //   entry,\n        //   node: routeNode,\n        //   isLoading: false,\n        // });\n        yield put({\n          type: UPDATE_LOADING_STATE,\n          isLoading: false,\n        });\n      } else\n        yield call(\n          setRouteEntry,\n          routeEntry,\n          yield select(selectCurrentNode),\n          yield select(selectCurrentAncestors)\n        );\n    } else {\n      // // Handle homepage\n      // if (isHome) {\n      //   pathNode = yield cachedSearch.getRootNode(\n      //     {\n      //       depth: childrenDepth,\n      //       entryFields: '*',\n      //       entryLinkDepth,\n      //       language: defaultLang,\n      //       versionStatus: deliveryApiStatus,\n      //     },\n      //     project\n      //   );\n      //   ({ entry } = pathNode || {});\n      // Handle preview routes\n      if (isPreview) {\n        let splitPath = currentPath.split('/');\n        let entryGuid = splitPath[2];\n        let language = defaultLang;\n        if (splitPath.length >= 3) {\n          //set lang key if available in the path, else use default lang\n          //assumes preview url on content type is: http://preview.ALIAS.contensis.cloud/preview/{GUID}/{LANG}\n          if (splitPath.length == 4) language = splitPath[3];\n          // According to product dev we cannot use Node API\n          // for previewing entries as it gives a response of []\n          // -- apparently it is not correct to request latest content\n          // with Node API\n\n          let previewEntry = yield deliveryApi\n            .getClient(deliveryApiStatus, project)\n            .entries.get({\n              id: entryGuid,\n              language,\n              linkDepth: entryLinkDepth,\n            });\n          if (previewEntry) {\n            pathNode = { entry: previewEntry };\n            ({ entry } = pathNode || {});\n          }\n        }\n      } else {\n        // Handle all other routes\n        const childrenDepth =\n          doNavigation === true || doNavigation.children === true\n            ? 1\n            : (doNavigation && doNavigation.children) || 0;\n\n        pathNode = yield cachedSearch.getNode(\n          {\n            depth: childrenDepth,\n            path: currentPath,\n            entryFields: setContentTypeLimits\n              ? ['sys.contentTypeId', 'sys.id']\n              : '*',\n            entryLinkDepth: setContentTypeLimits ? 0 : entryLinkDepth,\n            language: defaultLang,\n            versionStatus: deliveryApiStatus,\n          },\n          project\n        );\n        ({ entry } = pathNode || {});\n\n        if (\n          setContentTypeLimits &&\n          pathNode &&\n          pathNode.entry &&\n          pathNode.entry.sys &&\n          pathNode.entry.sys.id\n        ) {\n          // Get fields[] and linkDepth from ContentTypeMapping to get the entry data\n          // at a specified depth with specified fields\n          const {\n            fields,\n            linkDepth,\n            nodeOptions = {},\n          } = findContentTypeMapping(\n            ContentTypeMappings,\n            pathNode.entry.sys.contentTypeId\n          ) || {};\n          const query = routeEntryByFieldsQuery(\n            pathNode.entry.sys.id,\n            pathNode.entry.sys.language,\n            fields,\n            deliveryApiStatus\n          );\n          const payload = yield cachedSearch.search(\n            query,\n            linkDepth || entryLinkDepth || 0,\n            project\n          );\n          if (payload && payload.items && payload.items.length > 0) {\n            pathNode.entry = entry = payload.items[0];\n          }\n\n          if (childrenDepth > 0 || nodeOptions.children) {\n            const childrenOptions = nodeOptions.children || {};\n            // We need to make a separate call for child nodes if the first node query has been\n            // limited by linkDepth or fields[]\n            const nodeWithChildren = yield cachedSearch.getNode({\n              depth:\n                childrenOptions.depth !== undefined\n                  ? childrenOptions.depth\n                  : childrenDepth,\n              path: currentPath,\n              entryFields: childrenOptions.fields || fields || '*',\n              entryLinkDepth:\n                childrenOptions.linkDepth !== undefined\n                  ? childrenOptions.linkDepth\n                  : linkDepth !== undefined\n                  ? linkDepth\n                  : entryLinkDepth,\n              language: defaultLang,\n              versionStatus: deliveryApiStatus,\n            });\n            if (nodeWithChildren && nodeWithChildren.children) {\n              pathNode.children = nodeWithChildren.children;\n            }\n          }\n        }\n      }\n\n      if (pathNode && pathNode.id) {\n        if (doNavigation === true || doNavigation.ancestors) {\n          try {\n            ancestors = yield cachedSearch.getAncestors(\n              {\n                id: pathNode.id,\n                language: defaultLang,\n                versionStatus: deliveryApiStatus,\n              },\n              project\n            );\n          } catch (ex) {\n            log.info('Problem fetching ancestors', ex);\n          }\n        }\n\n        if (doNavigation === true || doNavigation.siblings) {\n          try {\n            siblings = yield cachedSearch.getSiblings(\n              {\n                id: pathNode.id,\n                language: defaultLang,\n                versionStatus: deliveryApiStatus,\n              },\n              project\n            );\n          } catch (ex) {\n            log.info('Problem fetching siblings', ex);\n          }\n        }\n      }\n    }\n\n    const contentTypeMapping =\n      findContentTypeMapping(\n        ContentTypeMappings,\n        pathNode?.entry?.sys?.contentTypeId\n      ) || {};\n\n    // Inject redux { key, reducer, saga } provided by ContentTypeMapping\n    if (contentTypeMapping.injectRedux)\n      yield call(reduxInjectorSaga, contentTypeMapping.injectRedux);\n\n    if (withEvents && withEvents.onRouteLoaded) {\n      // Check if the app has provided a requireLogin boolean flag or groups array\n      // in addition to checking if requireLogin is set in the route definition\n      ({ requireLogin } =\n        (yield withEvents.onRouteLoaded({ ...action, entry })) || {});\n    }\n\n    if (requireLogin !== false) {\n      // Do not call the login feature saga if requireLogin is false\n      yield call(handleRequiresLoginSaga, {\n        ...action,\n        entry,\n        requireLogin,\n      });\n    }\n\n    if (\n      pathNode &&\n      pathNode.entry &&\n      pathNode.entry.sys &&\n      pathNode.entry.sys.id\n    ) {\n      entry = pathNode.entry;\n      const { entryMapper } = contentTypeMapping;\n\n      yield call(\n        setRouteEntry,\n        entry,\n        pathNode,\n        ancestors,\n        siblings,\n        entryMapper,\n        false,\n        appsays && appsays.refetchNode\n      );\n    } else {\n      if (staticRoute)\n        yield call(setRouteEntry, null, pathNode, ancestors, siblings);\n      else yield call(do404);\n    }\n    if (!appsays || !appsays.preventScrollTop) {\n      // Scroll into View\n      if (typeof window !== 'undefined') {\n        window.scroll({\n          top: 0,\n        });\n      }\n    }\n\n    if (\n      !hasNavigationTree(state) &&\n      (doNavigation === true || doNavigation.tree)\n    )\n      if (typeof window !== 'undefined') {\n        yield put({\n          type: GET_NODE_TREE,\n          treeDepth:\n            doNavigation === true ||\n            !doNavigation.tree ||\n            doNavigation.tree === true\n              ? 2\n              : doNavigation.tree,\n        });\n      } else {\n        yield call(ensureNodeTreeSaga);\n      }\n  } catch (e) {\n    log.error(...['Error running route saga:', e, e.stack]);\n    yield call(do500, e);\n  }\n}\n\nfunction* setRouteEntry(\n  entry,\n  node,\n  ancestors,\n  siblings,\n  entryMapper,\n  notFound = false,\n  remapEntry = false\n) {\n  const entrySys = (entry && entry.sys) || {};\n\n  const currentEntryId = yield select(selectRouteEntryEntryId);\n  const currentEntryLang = yield select(selectRouteEntryLanguage);\n  const mappedEntry =\n    currentEntryId === entrySys.id &&\n    currentEntryLang === entrySys.language &&\n    remapEntry === false\n      ? (yield select(selectMappedEntry, 'js')) || {}\n      : yield mapRouteEntry(entryMapper, {\n          ...node,\n          entry,\n          ancestors,\n          siblings,\n        });\n\n  yield all([\n    put({\n      type: SET_ENTRY,\n      id: entrySys.id,\n      entry,\n      mappedEntry,\n      node,\n      notFound,\n    }),\n    ancestors &&\n      put({\n        type: SET_ANCESTORS,\n        ancestors,\n      }),\n    siblings &&\n      put({\n        type: SET_SIBLINGS,\n        siblings,\n      }),\n  ]);\n}\n\nfunction* mapRouteEntry(entryMapper, node) {\n  try {\n    if (typeof entryMapper === 'function') {\n      const state = yield select();\n      const mappedEntry = yield call(entryMapper, node, state);\n      return mappedEntry;\n    }\n  } catch (e) {\n    log.error(...['Error running entryMapper:', e, e.stack]);\n  }\n  return;\n}\n\nfunction* do404() {\n  yield call(clientReloadHitServer);\n  yield put({\n    type: SET_ENTRY,\n    id: null,\n    entry: null,\n    notFound: true,\n  });\n}\n\nfunction* clientReloadHitServer() {\n  const stateEntry = yield select(selectRouteEntry);\n\n  // If in client and there is a stateEntry.sys field reload the page,\n  // on the 2nd load stateEntry.sys should be null at this point,\n  // we do not wish to reload again and get stuck in an infinite reloading loop\n  if (typeof window !== 'undefined' && (stateEntry?.sys || null)) {\n    window.location.reload();\n  }\n}\n\nfunction* do500(error) {\n  yield put({\n    type: SET_ENTRY,\n    id: null,\n    entry: null,\n    notFound: true,\n    isError: true,\n    error,\n    statusCode: error && error.status ? error.status : 500,\n  });\n}\n\nfunction* reduxInjectorSaga(injectorFn) {\n  if (typeof injectorFn === 'function') {\n    const { key, reducer, saga } = yield injectorFn();\n    reduxInjector({ key, reducer, saga });\n  }\n}\n","import { to } from 'await-to-js';\nimport { put, select, takeEvery } from 'redux-saga/effects';\nimport { setRoute } from '~/routing/redux/actions';\nimport { selectCurrentSearch } from '~/routing/redux/selectors';\nimport { queryParams } from '~/util/navigation';\nimport {\n  REGISTER_USER,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_FAILED,\n} from '../types';\n\nexport const registerSagas = [\n  takeEvery(REGISTER_USER, registerSaga),\n  takeEvery(REGISTER_USER_SUCCESS, redirectSaga),\n];\n\nfunction* registerSaga({ user, mappers }) {\n  let requestBody = user;\n  // Allow use of request mapper to take a user object\n  // of any format and return the payload for the api request\n  if (mappers && mappers.request && typeof mappers.request === 'function') {\n    requestBody = yield mappers.request(user);\n  }\n\n  // Make POST call to register API\n  const response = yield fetch('/account/register', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(requestBody),\n  });\n\n  if (response.ok) {\n    let mappedResponse;\n    const [, responseBody] = yield to(response.json());\n    if (responseBody) {\n      // Allow use of response mapper to convert the successful user object\n      // from the api response body into a user object of any format\n      if (\n        mappers &&\n        mappers.response &&\n        typeof mappers.response === 'function'\n      ) {\n        mappedResponse = yield mappers.response(responseBody);\n      }\n      // Update user object with mappedResponse or responseBody\n      yield put({\n        type: REGISTER_USER_SUCCESS,\n        user: mappedResponse || responseBody,\n      });\n    } else {\n      // OK response but unable to parse the response body\n      yield put({\n        type: REGISTER_USER_FAILED,\n        error: {\n          message:\n            'Unable to parse the created user from the register service response',\n        },\n      });\n    }\n  } else {\n    // Not OK responses, these can be due to service availability\n    // or status codes echoed from the responses received from\n    // management api when registering the user\n    const [, errorResponse] = yield to(response.json());\n    const error = (errorResponse && errorResponse.error) || errorResponse || {};\n    // Get something meaningful from the response if there is no message in the body\n    if (!error.message) {\n      error.message = `Registration service: ${response.statusText}`;\n      error.status = response.status;\n    }\n    yield put({\n      type: REGISTER_USER_FAILED,\n      error,\n    });\n  }\n}\n\nfunction* redirectSaga() {\n  // Check if querystring contains a redirect_uri\n  const currentQs = queryParams(yield select(selectCurrentSearch));\n  const redirectUri = currentQs.redirect_uri || currentQs.redirect;\n\n  // We must use redux based navigation to preserve the registration state\n  if (redirectUri) yield put(setRoute(redirectUri));\n}\n","const PAP_URL = 'https://pap.zengenti.com';\n\nconst USER_ENVS_URI = 'my-environments';\nconst USER_RESEND_VERIFICATION_URI = 'account/verify/resend';\nconst USER_REQUEST_PASSWORD_RESET_URI = 'account/reset';\nconst USER_RESET_PASSWORD_URI = 'account/reset/password';\n\nconst USER_ENVS_URL = `${PAP_URL}/${USER_ENVS_URI}`;\n\nconst BASE_OPTIONS = {\n  method: 'GET',\n  headers: { 'Content-Type': 'application/json' },\n};\n\nexport class UserHelper {\n  static async GetUsersEnvironments(securityToken) {\n    const options = {\n      ...BASE_OPTIONS,\n      headers: {\n        'x-security-token': securityToken,\n      },\n    };\n    return await UserHelper.get(USER_ENVS_URL, options);\n  }\n  static async ResendUserVerification(userEmail) {\n    const options = {\n      ...BASE_OPTIONS,\n    };\n    return await UserHelper.get(\n      `/${USER_RESEND_VERIFICATION_URI}?user=${userEmail}`,\n      options\n    );\n  }\n  static async RequestPasswordReset(userEmailObject) {\n    const options = {\n      ...BASE_OPTIONS,\n      body: JSON.stringify(userEmailObject),\n    };\n    options.method = 'POST';\n\n    return await UserHelper.get(`/${USER_REQUEST_PASSWORD_RESET_URI}`, options);\n  }\n  static async ResetPassword(resetPasswordObject) {\n    const options = {\n      ...BASE_OPTIONS,\n      body: JSON.stringify(resetPasswordObject),\n    };\n    options.method = 'POST';\n\n    return await UserHelper.get(`/${USER_RESET_PASSWORD_URI}`, options);\n  }\n\n  static async get(url, options = BASE_OPTIONS) {\n    try {\n      const responseBody = await api(url, options);\n      return responseBody;\n    } catch (err) {\n      return { error: { message: err.message } };\n    }\n  }\n}\n\nasync function api(url, options) {\n  return fetch(url, options)\n    .then(async response => {\n      return response.json().then(data => data);\n    })\n    .catch(error => {\n      throw error;\n    });\n}\n","import { put, takeEvery, select } from 'redux-saga/effects';\nimport { to } from 'await-to-js';\nimport { getManagementApiClient } from '~/user/util/ContensisManagementApi';\nimport { UserHelper } from '~/user/util/userHelper';\nimport { selectClientCredentials } from '../selectors';\nimport {\n  REQUEST_USER_PASSWORD_RESET,\n  RESET_USER_PASSWORD,\n  REQUEST_USER_PASSWORD_RESET_ERROR,\n  REQUEST_USER_PASSWORD_RESET_SENDING,\n  REQUEST_USER_PASSWORD_RESET_SUCCESS,\n  RESET_USER_PASSWORD_ERROR,\n  RESET_USER_PASSWORD_SENDING,\n  RESET_USER_PASSWORD_SUCCESS,\n  CHANGE_USER_PASSWORD,\n  CHANGE_USER_PASSWORD_SENDING,\n  CHANGE_USER_PASSWORD_SUCCESS,\n  CHANGE_USER_PASSWORD_ERROR,\n} from '../types';\n\nexport const resetPasswordSagas = [\n  takeEvery(REQUEST_USER_PASSWORD_RESET, requestPasswordResetSaga),\n  takeEvery(RESET_USER_PASSWORD, resetPasswordSaga),\n  takeEvery(CHANGE_USER_PASSWORD, changePasswordSaga),\n];\n\nfunction* requestPasswordResetSaga(action) {\n  const userEmailObject = action.userEmailObject;\n  yield put({\n    type: REQUEST_USER_PASSWORD_RESET_SENDING,\n  });\n  if (userEmailObject && userEmailObject.userEmail) {\n    try {\n      const passwordResetRequestResponse =\n        yield UserHelper.RequestPasswordReset(userEmailObject);\n\n      if (passwordResetRequestResponse) {\n        if (!passwordResetRequestResponse.error) {\n          yield put({\n            type: REQUEST_USER_PASSWORD_RESET_SUCCESS,\n          });\n        } else {\n          yield put({\n            type: REQUEST_USER_PASSWORD_RESET_ERROR,\n            error: passwordResetRequestResponse.error.message,\n          });\n        }\n      } else {\n        yield put({\n          type: REQUEST_USER_PASSWORD_RESET_ERROR,\n          error: 'No response from server',\n        });\n      }\n    } catch (error) {\n      yield put({\n        type: REQUEST_USER_PASSWORD_RESET_ERROR,\n        error: error && error.toString(),\n      });\n    }\n  } else {\n    yield put({\n      type: REQUEST_USER_PASSWORD_RESET_ERROR,\n      error: 'Invalid object',\n    });\n  }\n}\n\nfunction* resetPasswordSaga(action) {\n  const resetPasswordObject = action.resetPasswordObject;\n\n  yield put({\n    type: RESET_USER_PASSWORD_SENDING,\n  });\n  if (resetPasswordObject.token && resetPasswordObject.password) {\n    try {\n      const resetPasswordResponse = yield UserHelper.ResetPassword(\n        resetPasswordObject\n      );\n\n      if (resetPasswordResponse) {\n        if (!resetPasswordResponse.error) {\n          yield put({\n            type: RESET_USER_PASSWORD_SUCCESS,\n          });\n        } else {\n          const error =\n            (resetPasswordResponse.error.data &&\n              resetPasswordResponse.error.data.length > 0 &&\n              resetPasswordResponse.error.data[0].message) ||\n            resetPasswordResponse.error.message;\n          yield put({\n            type: RESET_USER_PASSWORD_ERROR,\n            error,\n          });\n        }\n      } else {\n        yield put({\n          type: RESET_USER_PASSWORD_ERROR,\n          error: 'No response from server',\n        });\n      }\n    } catch (error) {\n      yield put({\n        type: RESET_USER_PASSWORD_ERROR,\n        error: error && error.toString(),\n      });\n    }\n  } else {\n    yield put({\n      type: RESET_USER_PASSWORD_ERROR,\n      error: 'Invalid object',\n    });\n  }\n}\n\n// userId\n// existingPassword\n// newPassword\nfunction* changePasswordSaga(action) {\n  if (\n    !action ||\n    !action.userId ||\n    !action.currentPassword ||\n    !action.newPassword\n  ) {\n    yield put({\n      type: CHANGE_USER_PASSWORD_ERROR,\n      error: 'Invalid action object sent to changePassword saga',\n    });\n    return;\n  }\n\n  try {\n    const changePasswordObject = {\n      userId: action.userId,\n      existing: action.currentPassword,\n      new: action.newPassword,\n    };\n\n    yield put({\n      type: CHANGE_USER_PASSWORD_SENDING,\n    });\n    const clientCredentials = yield select(selectClientCredentials, 'js');\n    const client = yield getManagementApiClient({ ...clientCredentials });\n\n    const [err, res] = yield to(\n      client.security.users.updatePassword(changePasswordObject)\n    );\n\n    if (err) {\n      const error =\n        (err?.data?.data?.length > 0 && err.data.data[0].message) ||\n        err?.data?.message;\n      yield put({\n        type: CHANGE_USER_PASSWORD_ERROR,\n        error,\n      });\n      return;\n    }\n\n    // // eslint-disable-next-line no-console\n    // console.log(changePasswordObject);\n    // // eslint-disable-next-line no-console\n    // console.log(userCredentialsObject);\n    yield put({\n      type: CHANGE_USER_PASSWORD_SUCCESS,\n    });\n  } catch (error) {\n    yield put({\n      type: CHANGE_USER_PASSWORD_ERROR,\n      error: error && error.toString(),\n    });\n  }\n}\n","import { loginSagas } from './login';\nimport { registerSagas } from './register';\nimport { resetPasswordSagas } from './resetPassword';\n\nexport const userSagas = [\n  ...loginSagas,\n  ...registerSagas,\n  ...resetPasswordSagas,\n];\n","// index.js\nimport { all } from 'redux-saga/effects';\nimport { navigationSagas } from './navigation';\nimport { routingSagas } from '~/routing/redux/sagas';\nimport { userSagas } from '~/user/redux/sagas';\n\nexport default function (featureSagas = []) {\n  return function* rootSaga() {\n    const subSagas = [...routingSagas, ...navigationSagas, ...userSagas];\n    yield all([...subSagas, ...featureSagas]);\n  };\n}\n","const servers = SERVERS; /* global SERVERS */\nconst alias = servers.alias.toLowerCase();\nconst publicUri = PUBLIC_URI; /* global PUBLIC_URI */\nconst projects = PROJECTS; /* global PROJECTS */\n\n// return a projectId via the request hostname\nconst pickProject = (hostname, query) => {\n  // if localhost we can only infer via a querystring, and take your word for it\n  if (hostname == 'localhost') {\n    return (query && query.p) || projects[0].id;\n  }\n\n  // if hostname is the actual public uri we can return the first project from the list\n  if (hostname == publicUri) {\n    return projects[0].id;\n  }\n\n  let project = 'unknown';\n\n  // // go through all the defined projects\n  // Object.entries(projects).map(([, p]) => {\n  const p = projects[0];\n\n  // check if we're accessing via the project's public uri\n  if (hostname.includes(p.publicUri)) project = p.id;\n\n  // the url structure is different for website (we don't prefix)\n  if (p.id.startsWith('website')) {\n    // check for internal and external hostnames\n    // we check live and preview distinctly so our rule does not clash with\n    // hostnames that use a project prefix\n    if (\n      hostname.includes(`live-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`live.${alias}.contensis.cloud`) ||\n      hostname.includes(`preview-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`preview.${alias}.contensis.cloud`)\n    )\n      project = p.id;\n  } else {\n    // check for internal and external hostnames, prefixed with the projectId\n    if (\n      hostname.includes(`${p.id.toLowerCase()}-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`${p.id.toLowerCase()}.${alias}.contensis.cloud`)\n    )\n      project = p.id;\n  }\n  // });\n  return project === 'unknown' ? p.id : project;\n};\n\nexport default pickProject;\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { AppRootProps } from '../routing/routes';\nimport { RouteLoader } from '../routing';\n\nconst AppRoot = (props: AppRootProps) => {\n  return <RouteLoader {...props} />;\n};\n\nexport default hot(module)(AppRoot);\n"],"names":["storeSurrogateKeys","response","keys","headers","get","map","reduxStore","dispatch","setSurrogateKeys","url","getClientConfig","project","config","DELIVERY_API_CONFIG","responseHandler","projectId","window","defaultHeaders","PROXY_DELIVERY_API","rootUrl","DeliveryApi","getClientSideVersionStatus","currentHostname","location","hostname","getVersionStatusFromHostname","indexOf","endsWith","search","query","linkDepth","env","client","Client","create","entries","getClient","deliveryApiStatus","baseConfig","versionStatus","getEntry","id","deliveryApi","CacheNode","constructor","key","value","next","prev","LruCache","limit","head","tail","size","node","remove","setHead","set","CachedSearch","cache","taxonomyLookup","request","JSON","stringify","toString","searchUsingPost","clientConfig","getContentType","contentTypes","getTaxonomyNode","taxonomy","resolveChildren","then","extendTaxonomyNode","getRootNode","options","nodes","getRoot","getNode","path","getAncestors","getChildren","getSiblings","execute","promise","catch","cachedSearch","selectedHistory","createBrowserHistory","createMemoryHistory","history","browserHistory","navigationSagas","takeEvery","GET_NODE_TREE","ensureNodeTreeSaga","action","state","select","hasNavigationTree","deliveryApiVersionStatus","selectVersionStatus","selectCurrentProject","depth","treeDepth","put","type","SET_NODE_TREE","GET_NODE_TREE_ERROR","ex","error","sys","contentTypeId","dataFormat","filename","includeInSearch","slug","uri","Fields","entryTitle","entryDescription","keywords","wildcard","fieldExpression","field","operator","weight","Array","isArray","equalToOrIn","Op","defaultExpressions","equalTo","arr","length","in","routeEntryByFieldsQuery","language","fields","Query","routingSagas","SET_NAVIGATION_PATH","getRouteSaga","SET_ROUTE","setRouteSaga","payload","method","args","entry","withEvents","routes","ContentTypeMappings","staticRoute","route","injectRedux","call","reduxInjectorSaga","pathNode","ancestors","siblings","appsays","requireLogin","onRouteLoad","doNavigation","customNavigation","entryLinkDepth","undefined","setContentTypeLimits","find","ct","nodeOptions","routeEntry","selectRouteEntry","routeNode","selectCurrentNode","currentPath","isPreview","startsWith","defaultLang","customRouting","fetchNode","statePath","refetchNode","UPDATE_LOADING_STATE","isLoading","setRouteEntry","selectCurrentAncestors","splitPath","split","entryGuid","previewEntry","childrenDepth","children","entryFields","findContentTypeMapping","items","childrenOptions","nodeWithChildren","log","info","contentTypeMapping","onRouteLoaded","handleRequiresLoginSaga","entryMapper","do404","preventScrollTop","scroll","top","tree","e","stack","do500","notFound","remapEntry","entrySys","currentEntryId","selectRouteEntryEntryId","currentEntryLang","selectRouteEntryLanguage","mappedEntry","selectMappedEntry","mapRouteEntry","all","SET_ENTRY","SET_ANCESTORS","SET_SIBLINGS","clientReloadHitServer","stateEntry","reload","isError","statusCode","status","injectorFn","reducer","saga","reduxInjector","registerSagas","REGISTER_USER","registerSaga","REGISTER_USER_SUCCESS","redirectSaga","user","mappers","requestBody","fetch","Accept","body","ok","mappedResponse","responseBody","to","json","REGISTER_USER_FAILED","message","errorResponse","statusText","currentQs","queryParams","selectCurrentSearch","redirectUri","redirect_uri","redirect","setRoute","PAP_URL","USER_ENVS_URI","USER_RESEND_VERIFICATION_URI","USER_REQUEST_PASSWORD_RESET_URI","USER_RESET_PASSWORD_URI","USER_ENVS_URL","BASE_OPTIONS","UserHelper","GetUsersEnvironments","securityToken","ResendUserVerification","userEmail","RequestPasswordReset","userEmailObject","ResetPassword","resetPasswordObject","api","err","data","resetPasswordSagas","REQUEST_USER_PASSWORD_RESET","requestPasswordResetSaga","RESET_USER_PASSWORD","resetPasswordSaga","CHANGE_USER_PASSWORD","changePasswordSaga","REQUEST_USER_PASSWORD_RESET_SENDING","passwordResetRequestResponse","REQUEST_USER_PASSWORD_RESET_SUCCESS","REQUEST_USER_PASSWORD_RESET_ERROR","RESET_USER_PASSWORD_SENDING","token","password","resetPasswordResponse","RESET_USER_PASSWORD_SUCCESS","RESET_USER_PASSWORD_ERROR","userId","currentPassword","newPassword","CHANGE_USER_PASSWORD_ERROR","changePasswordObject","existing","new","CHANGE_USER_PASSWORD_SENDING","clientCredentials","selectClientCredentials","getManagementApiClient","res","security","users","updatePassword","CHANGE_USER_PASSWORD_SUCCESS","userSagas","loginSagas","featureSagas","rootSaga","subSagas","servers","SERVERS","alias","toLowerCase","publicUri","PUBLIC_URI","projects","PROJECTS","pickProject","p","includes","AppRoot","props"],"mappings":"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"}