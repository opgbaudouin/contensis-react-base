{"version":3,"file":"util.js","sources":["../src/util/json-mapper.ts","../src/server/features/caching/setCachingHeaders.ts","../src/util/stringifyStrings.js","../src/util/urls.ts","../src/app/pages/VersionInfo/transformations/state-to-versioninfoprops.mapper.ts","../src/app/pages/VersionInfo/components/VersionInfo.styled.tsx","../src/app/pages/VersionInfo/components/VersionInfo.tsx"],"sourcesContent":["import { Entry } from 'contensis-delivery-api/lib/models';\nimport mapJson, { jpath } from 'jsonpath-mapper';\nimport MappingTemplate, {\n  PureJsFunction,\n} from 'jsonpath-mapper/dist/models/Template';\nimport { AppState } from '~/redux/appstate';\nimport { EntryMapper, RouteNode } from '~/routing/routes';\n\nexport { default as mapJson, jpath } from 'jsonpath-mapper';\n\ntype Mappers<S> = { [contentTypeId: string]: MappingTemplate<S> };\n\n/**\n *\n * @param {object} json The source object we wish to transform\n * @param {object} template The mapping template we wish to apply to the source\n * object to generate the intended target object\n */\nexport const useMapper = <T, S>(json: S, template: MappingTemplate<S>) => {\n  return template ? (mapJson((json || {}) as S, template) as T) : json;\n};\n\nconst chooseMapperByFieldValue = <S, T extends Mappers<S>>(\n  entry: S,\n  mappers: T,\n  field = 'sys.contentTypeId'\n) => {\n  const fieldValue = jpath(field, entry || {}) as string;\n  return (mappers[fieldValue] || mappers.default || {}) as T[keyof T];\n};\n\n/**\n * useEntriesMapper hook to take a list of entries from Delivery API along\n * with mappers for each contentTypeId and return an array of mapped objects\n * @param {any} entry The source entry we wish to transform\n * @param {object} mappers Object with keys containing mapper templates,\n * the key name matching sys.contentTypeId\n * @param {string} field Only include if we need to match content based on\n * a field other than sys.contentTypeId in the source data\n * @returns {object} Object transformed using a matched content type or\n * a default mapper template, returns an empty object if no mapper template\n * couild be applied.\n */\nexport const useEntriesMapper = <S, T extends Mappers<S>>(\n  entry: S,\n  mappers: T,\n  field = 'sys.contentTypeId'\n) => {\n  const mapper = chooseMapperByFieldValue(entry, mappers, field);\n  return useMapper(entry, mapper);\n};\n\n/**\n * Deprecated: due to misleading name, use the hook useEntriesMapper instead\n */\nexport const useEntryMapper = useEntriesMapper;\n\n/**\n * mapEntries mapping function to take a list of entries from Delivery API along\n * with mappers for each contentTypeId and return an array of mapped objects\n * @param {any} entry The source entry we wish to transform\n * @param {object} mappers Object with keys containing mapper templates,\n * the key name matching sys.contentTypeId\n * @param {string} field Only include if we need to match content based on\n * a field other than sys.contentTypeId in the source data\n * @returns {object} Object transformed using a matched content type or\n * a default mapper template, returns an empty object if no mapper template\n * couild be applied.\n */\nexport const mapEntries = <\n  S,\n  Mappers extends { [contentTypeId: string]: MappingTemplate<S> }\n>(\n  entries: S[],\n  mappers: Mappers,\n  field = 'sys.contentTypeId'\n) =>\n  entries.map(entry => {\n    const mapper = chooseMapperByFieldValue(entry, mappers, field);\n    return mapper ? mapJson((entry || {}) as S, mapper) : entry;\n  });\n\n/**\n * mapComposer mapping function to take a composer field from Delivery API along\n * with mappers for each Composer Item \"type\" and return an array of mapped components\n * @param {array} composer Composer field array of Composer Items\n * @param {object} mappers A keyed object with each key matching the Composer Item \"type\"\n * @returns {array} Array of mapped objects transformed using a matched Composer Item \"type\" mapping\n * or null. Injects a \"_type\" property into each transformed object in the array to indicate\n * where the mapping originated and for what component the mapped object is representing\n */\nexport const mapComposer = <\n  S extends { type: string; value: any },\n  T extends Mappers<S>\n>(\n  composer: S[],\n  mappers: T\n) =>\n  Array.isArray(composer)\n    ? composer.map((composerItem, index) => {\n        const itemValue = composerItem.value;\n        const mapper = mappers[composerItem.type] || mappers.default;\n        if (mapper) {\n          // Add some fields into the composer item mapper and return object\n          const addedFields = {\n            _type: composerItem.type,\n            _index: index,\n          };\n\n          // Add fields and $root item into the composer item source object\n          // for use inside each item mapping\n          const sourceObject =\n            itemValue && Array.isArray(itemValue)\n              ? itemValue.map(iv =>\n                  typeof iv === 'object'\n                    ? { ...addedFields, ...iv, $root: composer }\n                    : iv\n                )\n              : typeof itemValue === 'object'\n              ? { ...addedFields, ...itemValue, $root: composer }\n              : itemValue || {};\n\n          const mappedFields = mapJson(sourceObject, mapper) as any;\n\n          // Add the extra fields in with the return object\n          return mappedFields && typeof mappedFields === 'object'\n            ? { ...mappedFields, ...addedFields }\n            : mappedFields;\n        } else return;\n      })\n    : composer || [];\n\n/**\n * useComposerMapper hook to take a composer field from Delivery API along\n * with mappers for each Composer Item \"type\" and return an array of mapped components\n * @param {array} composer Composer field array of Composer Items\n * @param {object} mappers A keyed object with each key matching the Composer Item \"type\"\n * @returns {array} Array of mapped objects transformed using a matched Composer Item \"type\" mapping\n * or null. Injects a \"_type\" property into each transformed object in the array to indicate\n * where the mapping originated and for what component the mapped object is representing\n */\nexport const useComposerMapper = <\n  S extends { type: string; value: any },\n  T extends Mappers<S>\n>(\n  composer: S[] = [],\n  mappers: T\n) => mapComposer(composer, mappers);\n\n/**\n * entryMapper will return a function to satisfy an entryMapper when defining app route\n * this is essentially a shorthand function to prevent boilerplate repetition inside your routes file\n * you do not need to use this function should you wish to map your entry via raw JS functions\n * @param mapping the jsonpath-mapper mapping template to apply when the route is resolved\n * @returns {mappedEntry}\n */\nexport const entryMapper =\n  (\n    mapping:\n      | MappingTemplate<RouteNode & Entry & { state?: AppState }>\n      | PureJsFunction<RouteNode & Entry & { state?: AppState }>\n  ): EntryMapper =>\n  (node, state) =>\n    mapJson({ ...node, ...(node.entry || ({} as Entry)), state }, mapping);\n\nexport default mapJson;\n","import { Response } from 'express';\n\nconst setCachingHeaders = (\n  response: Response,\n  { cacheControl = 'private', surrogateControl = '3600' },\n  method = 'header'\n) => {\n  if (cacheControl) response[method]('Cache-Control', cacheControl);\n  if (surrogateControl)\n    response[method](\n      'Surrogate-Control',\n      `max-age=${surrogateControl.toString()}`\n    );\n};\n\nexport default setCachingHeaders;\n","const stringifyStrings = obj => {\n  const returnObj = Array.isArray(obj) ? [] : {};\n  Object.entries(obj).forEach(([key, value]) => {\n    switch (typeof value) {\n      case 'string':\n        returnObj[key] = JSON.stringify(value);\n        break;\n      case 'object':\n        returnObj[key] = stringifyStrings(value);\n        break;\n      default:\n        returnObj[key] = value;\n        break;\n    }\n  });\n  return returnObj;\n};\n\nmodule.exports = stringifyStrings;\n","const url = (alias: string, project: string) => {\n  const projectAndAlias =\n    project && project.toLowerCase() !== 'website'\n      ? `${project.toLowerCase()}-${alias}`\n      : alias;\n  return {\n    api: `https://api-${alias}.cloud.contensis.com`,\n    cms: `https://cms-${alias}.cloud.contensis.com`,\n    liveWeb: `https://live-${projectAndAlias}.cloud.contensis.com`,\n    previewWeb: `https://preview-${projectAndAlias}.cloud.contensis.com`,\n    iisWeb: `https://iis-live-${projectAndAlias}.cloud.contensis.com`,\n    iisPreviewWeb: `https://iis-preview-${projectAndAlias}.cloud.contensis.com`,\n  };\n};\n\nexport default url;\n","import { default as mapJson } from '~/util/json-mapper';\nimport { selectCurrentProject } from '~/routing/redux/selectors';\nimport {\n  selectBuildNumber,\n  selectCommitRef,\n  selectVersionStatus,\n} from '~/redux/selectors/version';\nimport { IVersionInfoProps } from '../components/VersionInfo';\n\nconst context = (\n  typeof window != 'undefined' ? window : global\n) as typeof globalThis & {\n  DISABLE_SSR_REDUX: any;\n  PACKAGE_JSON: any;\n  PROJECTS: any;\n  PROXY_DELIVERY_API: any;\n  PUBLIC_URI: any;\n  REVERSE_PROXY_PATHS: string[];\n  SERVERS: any;\n};\n\nconst isDev = process.env.NODE_ENV === 'development';\n\nconst pj = () =>\n  isDev\n    ? PACKAGE_JSON /* global PACKAGE_JSON */\n    : context.PACKAGE_JSON || { name: 'packagejson not found', repository: '' };\n\nconst versionInfoProps = {\n  packageDetail: () => {\n    const pkg = pj();\n    return { name: pkg.name, version: pkg.version, repository: pkg.repository };\n  },\n  uris: {\n    gitRepo: () => pj().repository,\n    commit: state => {\n      const commitRef = selectCommitRef(state);\n      return `${pj().repository}/commit/${commitRef ? commitRef : ''}`;\n    },\n    pipeline: state => {\n      const buildNumber = selectBuildNumber(state);\n      return `${pj().repository}/${\n        pj().repository.includes('github.com') ? 'actions/runs' : 'pipelines'\n      }/${buildNumber ? buildNumber : ''}`;\n    },\n  },\n  zenPackageVersions: () => [\n    ...(Object.entries(pj().devDependencies || {}).filter(\n      ([pkg]) => pkg.includes('zengenti') || pkg.includes('contensis')\n    ) || []),\n    ...(Object.entries(pj().dependencies || {}).filter(\n      ([pkg]) => pkg.includes('zengenti') || pkg.includes('contensis')\n    ) || []),\n  ],\n  deliveryApi: () =>\n    JSON.parse(\n      JSON.stringify(DELIVERY_API_CONFIG /* global DELIVERY_API_CONFIG */)\n    ),\n  devEnv: () =>\n    typeof DEV_ENV !== 'undefined' /* global DEV_ENV */ ? DEV_ENV : null,\n  disableSsrRedux: () =>\n    isDev\n      ? DISABLE_SSR_REDUX /* global DISABLE_SSR_REDUX*/\n      : context.DISABLE_SSR_REDUX || false,\n  nodeEnv: () => process.env.NODE_ENV || 'production',\n  packagejson: () => pj() || {},\n  projects: () => (isDev ? PROJECTS /* global PROJECTS */ : context.PROJECTS),\n  proxyDeliveryApi: () =>\n    isDev\n      ? PROXY_DELIVERY_API /* global PROXY_DELIVERY_API */\n      : context.PROXY_DELIVERY_API || false,\n  publicUri: () =>\n    isDev ? PUBLIC_URI /* global PUBLIC_URI */ : context.PUBLIC_URI || null,\n  project: state => selectCurrentProject(state),\n  reverseProxyPaths: () =>\n    isDev\n      ? REVERSE_PROXY_PATHS /* global REVERSE_PROXY_PATHS */\n      : context.REVERSE_PROXY_PATHS || {},\n  servers: () => (isDev ? SERVERS /* global SERVERS */ : context.SERVERS),\n  version: {\n    buildNumber: state => selectBuildNumber(state),\n    commitRef: state => selectCommitRef(state),\n    contensisVersionStatus: state => selectVersionStatus(state),\n  },\n};\n\nconst mapStateToVersionInfo = state => {\n  const mappedProps = mapJson(state, versionInfoProps);\n  return mappedProps as IVersionInfoProps;\n};\n\nexport default mapStateToVersionInfo;\n","import styled from 'styled-components';\n\nexport const VersionInfoStyledTable = styled.table`\n  font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;\n  font-size: 1.6rem;\n  line-height: 1.5rem;\n  border-bottom: 4px solid #8892bf;\n  border-collapse: separate;\n  margin: 0 auto;\n  width: 80%;\n  th {\n    text-align: left;\n    background-color: #c4c9df;\n    border-bottom: #8892bf 2px solid;\n    border-bottom-color: #8892bf;\n    border-top: 20px solid #fff;\n  }\n  td {\n    border-bottom: 1px solid #eee;\n  }\n  td,\n  th {\n    padding: 0.5rem 0.75rem;\n    vertical-align: top;\n  }\n  .left {\n    width: 25%;\n  }\n  tr th {\n    border-right: hidden;\n    border-spacing: 0 15px;\n  }\n  .green {\n    background-color: #9c9;\n    border-bottom: 1px solid #696;\n  }\n  .red {\n    background-color: #c99;\n    border-bottom: 1px solid #966;\n  }\n  .small {\n    font-size: 100%;\n    line-height: 2.4rem;\n  }\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport mapStateToVersionInfo from '../transformations/state-to-versioninfoprops.mapper';\n\nimport { VersionInfoStyledTable } from './VersionInfo.styled';\n\nexport interface IVersionInfoProps {\n  deliveryApi: {\n    rootUrl: string;\n    accessToken: string;\n    projectId: string;\n    livePublishingRootUrl: string;\n  };\n  devEnv: any;\n  disableSsrRedux: boolean;\n  nodeEnv: string;\n  packageDetail: any;\n  project: string;\n  projects;\n  proxyDeliveryApi;\n  publicUri: string;\n  reverseProxyPaths: string[];\n  servers: {\n    alias: string;\n    api: string;\n    cms: string;\n    web: string;\n    iis: string;\n    previewIis: string;\n    previewWeb: string;\n  };\n  uris: {\n    gitRepo: string;\n    commit: string;\n    pipeline: string;\n  };\n  version: {\n    buildNumber: string;\n    commitRef: string;\n    contensisVersionStatus: string;\n  };\n  zenPackageVersions: string[];\n}\n\nconst VersionInfo = ({\n  deliveryApi,\n  devEnv,\n  disableSsrRedux,\n  nodeEnv,\n  packageDetail,\n  project,\n  projects,\n  proxyDeliveryApi,\n  publicUri,\n  reverseProxyPaths,\n  servers,\n  uris,\n  version,\n  zenPackageVersions,\n}: IVersionInfoProps) => {\n  return (\n    <VersionInfoStyledTable>\n      <thead>\n        <tr>\n          <td colSpan={2}>\n            <h1>\n              <a href=\"/\">Version Information</a>\n            </h1>\n          </td>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th colSpan={2}>Package detail</th>\n        </tr>\n        <tr>\n          <td className=\"left\">Name</td>\n          <td>{packageDetail.name}</td>\n        </tr>\n        <tr>\n          <td className=\"left\">Version</td>\n          <td>{packageDetail.version}</td>\n        </tr>\n        <tr>\n          <th colSpan={2}>Version info (state)</th>\n        </tr>\n        <tr>\n          <td>Git repo url: </td>\n          <td>\n            <a\n              href={packageDetail.repository}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {packageDetail.repository}\n            </a>\n          </td>\n        </tr>\n        <tr>\n          <td>Pipeline: </td>\n          <td>\n            <a href={uris.pipeline} target=\"_blank\" rel=\"noopener noreferrer\">\n              {version.buildNumber}\n            </a>\n          </td>\n        </tr>\n        <tr>\n          <td>Commit: </td>\n          <td>\n            <a href={uris.commit} target=\"_blank\" rel=\"noopener noreferrer\">\n              {version.commitRef}\n            </a>\n          </td>\n        </tr>\n        {/* <tr>\n            <td>Last release ref: </td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>Number of commits since last release: </td>\n            <td></td>\n          </tr> */}\n        <tr>\n          <td>Project</td>\n          <td className={project === 'unknown' ? 'red' : ''}>{project}</td>\n        </tr>\n        <tr>\n          <td>Contensis version status: </td>\n          <td\n            className={\n              version.contensisVersionStatus === 'published' ? 'green' : 'red'\n            }\n          >\n            {version.contensisVersionStatus}\n          </td>\n        </tr>\n        <tr>\n          <th colSpan={2}>Build configuration</th>\n        </tr>\n        <tr>\n          <td>Environment</td>\n          <td>{servers.alias}</td>\n        </tr>\n        <tr>\n          <td>Public uri</td>\n          <td>{publicUri}</td>\n        </tr>\n        <tr>\n          <td>Zengenti packages</td>\n          <td>\n            {zenPackageVersions.map(([pkg, ver], idx) => (\n              <div key={idx}>\n                {pkg}: {ver}\n              </div>\n            ))}\n          </td>\n        </tr>\n        <tr>\n          <td>Servers</td>\n          <td className=\"small\">\n            <div>web: {servers.web}</div>\n            <div>preview: {servers.previewWeb}</div>\n            <div>api: {servers.api}</div>\n            <div>cms: {servers.cms}</div>\n            <div>iis: {servers.iis}</div>\n            <div>iis preview: {servers.previewIis}</div>\n          </td>\n        </tr>\n        <tr>\n          <td>Reverse proxy paths</td>\n          <td>\n            {Object.entries(reverseProxyPaths).map(([, path], key) => (\n              <span key={key}>[ {path} ] </span>\n            ))}\n          </td>\n        </tr>\n        <tr>\n          <td>Projects</td>\n          <td>\n            {Object.entries(\n              projects as {\n                id: string;\n                publicUri: string;\n              }[]\n            ).map(([, project], key) => (\n              <div key={key}>\n                [ {project.id}: {project.publicUri} ]\n              </div>\n            ))}\n          </td>\n        </tr>\n        <tr>\n          <td>Delivery API</td>\n          <td className=\"small\">\n            <ul style={{ margin: 0, padding: 0 }}>\n              {Object.entries(deliveryApi).map(\n                ([key, value]: [string, any], idx) => {\n                  if (typeof value === 'object') return null;\n                  return (\n                    <li key={idx} style={{ listStyleType: 'none' }}>\n                      {key}: <span>{value}</span>\n                    </li>\n                  );\n                }\n              )}\n            </ul>\n          </td>\n        </tr>\n        <tr>\n          <td>Proxy Delivery API requests</td>\n          <td className={proxyDeliveryApi ? 'green' : 'red'}>\n            {proxyDeliveryApi.toString()}\n          </td>\n        </tr>\n        <tr>\n          <td>Disable SSR inline-redux</td>\n          <td>{disableSsrRedux.toString()}</td>\n        </tr>\n        <tr>\n          <td>NODE_ENV</td>\n          <td className={nodeEnv === 'production' ? 'green' : 'red'}>\n            {nodeEnv.toString()}\n          </td>\n        </tr>\n        {devEnv && (\n          <tr>\n            <td>process.env</td>\n            <td>\n              {Object.entries(devEnv).map(([k, v], key) => (\n                <div key={key}>\n                  [ {k}: {v} ]\n                </div>\n              ))}\n            </td>\n          </tr>\n        )}\n      </tbody>\n    </VersionInfoStyledTable>\n  );\n};\n\nexport default connect(mapStateToVersionInfo)(VersionInfo);\n"],"names":["useMapper","json","template","mapJson","chooseMapperByFieldValue","entry","mappers","field","fieldValue","jpath","default","useEntriesMapper","mapper","useEntryMapper","mapEntries","entries","map","mapComposer","composer","Array","isArray","composerItem","index","itemValue","value","type","addedFields","_type","_index","sourceObject","iv","$root","mappedFields","useComposerMapper","entryMapper","mapping","node","state","setCachingHeaders","response","cacheControl","surrogateControl","method","toString","stringifyStrings","obj","returnObj","Object","forEach","key","JSON","stringify","module","url","alias","project","projectAndAlias","toLowerCase","api","cms","liveWeb","previewWeb","iisWeb","iisPreviewWeb","context","window","global","isDev","process","env","NODE_ENV","pj","PACKAGE_JSON","name","repository","versionInfoProps","packageDetail","pkg","version","uris","gitRepo","commit","commitRef","selectCommitRef","pipeline","buildNumber","selectBuildNumber","includes","zenPackageVersions","devDependencies","filter","dependencies","deliveryApi","parse","DELIVERY_API_CONFIG","devEnv","DEV_ENV","disableSsrRedux","DISABLE_SSR_REDUX","nodeEnv","packagejson","projects","PROJECTS","proxyDeliveryApi","PROXY_DELIVERY_API","publicUri","PUBLIC_URI","selectCurrentProject","reverseProxyPaths","REVERSE_PROXY_PATHS","servers","SERVERS","contensisVersionStatus","selectVersionStatus","mapStateToVersionInfo","mappedProps","VersionInfoStyledTable","styled","table","VersionInfo","ver","idx","web","iis","previewIis","path","id","margin","padding","listStyleType","k","v","connect"],"mappings":"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"}