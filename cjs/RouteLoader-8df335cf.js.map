{"version":3,"file":"RouteLoader-8df335cf.js","sources":["../src/routing/components/NotFound.tsx","../src/routing/components/Status.tsx","../src/routing/components/RouteLoader.tsx"],"sourcesContent":["import React from 'react';\n\nconst NotFound = ({\n  statusCode,\n  statusText,\n}: {\n  statusCode: number;\n  statusText: string;\n}) => (\n  <>\n    <header>\n      <h1>{statusCode || '404'} Page Not Found</h1>\n      {statusText && (\n        <h2\n          style={{\n            background: '#eee',\n            color: '#666',\n            fontSize: '100%',\n            padding: '10px',\n          }}\n        >\n          {statusText}\n        </h2>\n      )}\n    </header>\n  </>\n);\n\nexport default NotFound;\n","import React, { PropsWithChildren } from 'react';\nimport { Route } from 'react-router-dom';\n\nexport const Status = ({\n  code,\n  children,\n}: PropsWithChildren<{ code: number }>) => {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.statusCode = code;\n        return children;\n      }}\n    />\n  );\n};\n","import React, { useEffect, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport { hot } from 'react-hot-loader';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport { renderRoutes, matchRoutes, RouteConfig } from 'react-router-config';\nimport { createSelector } from 'reselect';\n\nimport NotFound from './NotFound';\nimport { Status } from './Status';\n\nimport {\n  selectCurrentPath,\n  selectCurrentProject,\n  selectIsNotFound,\n  selectMappedEntry,\n  selectRouteEntry,\n  selectRouteEntryContentTypeId,\n  selectRouteErrorMessage,\n  selectRouteIsError,\n  selectRouteLoading,\n  selectRouteStatusCode,\n} from '../redux/selectors';\nimport { setNavigationPath } from '../redux/actions';\n\nimport {\n  selectUserGroups,\n  selectUserIsAuthenticated,\n} from '~/user/redux/selectors';\nimport { matchUserGroup } from '~/user/util/matchGroups';\n\nimport { toJS } from '~/util/ToJs';\nimport { Entry } from 'contensis-delivery-api/lib/models';\nimport { AppRootProps, RouteComponentProps, RouteLoaderProps } from '../routes';\n\nconst replaceDoubleSlashRecursive = (path: string) => {\n  const nextPath = path.replace(/\\/\\//, '/');\n\n  if (nextPath.match(/\\/\\//)) {\n    return replaceDoubleSlashRecursive(nextPath);\n  }\n\n  return nextPath;\n};\n\nconst getTrimmedPath = path => {\n  if (path !== '/') {\n    const nextPath = replaceDoubleSlashRecursive(path);\n    const lastChar = nextPath[nextPath.length - 1];\n    if (lastChar === '/') {\n      return nextPath.substring(0, nextPath.length - 1);\n    }\n  }\n  return path;\n};\n\ninterface IReduxProps {\n  contentTypeId: string | null;\n  entry: Entry | null;\n  isError: boolean;\n  isNotFound: boolean;\n  isLoading: boolean;\n  isLoggedIn: boolean;\n  mappedEntry: any;\n  projectId: string;\n  setNavigationPath: typeof setNavigationPath;\n  statePath: string;\n  statusCode: any;\n  statusText: string;\n  userGroups: any;\n}\n\nconst RouteLoader = ({\n  contentTypeId,\n  entry,\n  isError,\n  isLoading,\n  isLoggedIn,\n  isNotFound,\n  loadingComponent,\n  mappedEntry,\n  notFoundComponent,\n  projectId,\n  routes,\n  setNavigationPath,\n  statePath,\n  statusCode,\n  statusText,\n  userGroups,\n  withEvents,\n}: AppRootProps & RouteLoaderProps & IReduxProps) => {\n  const location = useLocation();\n  // Always ensure paths are trimmed of trailing slashes so urls are always unique\n  const trimmedPath = getTrimmedPath(location.pathname);\n\n  // Match any Static Routes a developer has defined\n  const matchedStaticRoute = () =>\n    matchRoutes(routes.StaticRoutes as RouteConfig[], location.pathname);\n  const isStaticRoute = () => matchedStaticRoute().length > 0;\n\n  const staticRoute = isStaticRoute() && matchedStaticRoute()[0];\n  const routeRequiresLogin = staticRoute && staticRoute.route.requireLogin;\n\n  const setPath = useCallback(() => {\n    // Use serverPath to control the path we send to siteview node api to resolve a route\n    let serverPath = '';\n    if (staticRoute && staticRoute.match && staticRoute.match.isExact) {\n      const { match, route } = staticRoute;\n\n      if (route.path?.includes('*')) {\n        // Send the whole url to api if we have matched route containing wildcard\n        serverPath = match.url;\n      } else if (typeof route.fetchNodeLevel === 'number') {\n        // Send all url parts to a specified level to api\n        serverPath = match.url\n          .split('/')\n          .splice(0, route.fetchNodeLevel + 1)\n          .join('/');\n      } else {\n        // Send all non-parameterised url parts to api\n        serverPath = (route.path as string)\n          ?.split('/')\n          .filter(p => !p.startsWith(':'))\n          .join('/');\n      }\n    }\n\n    setNavigationPath(\n      serverPath || trimmedPath,\n      location,\n      staticRoute,\n      withEvents,\n      statePath,\n      routes\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    setNavigationPath,\n    // staticRoute,\n    withEvents,\n    location,\n    routes,\n    // statePath,\n    trimmedPath,\n  ]);\n\n  if (typeof window == 'undefined') setPath();\n\n  useEffect(() => {\n    setPath();\n  }, [location, setPath]);\n\n  // Need to redirect when url endswith a /\n  if (location.pathname.length > trimmedPath.length) {\n    return <Redirect to={trimmedPath} />;\n  }\n\n  // Render any Static Routes a developer has defined\n  if (isStaticRoute() && !(!isLoggedIn && routeRequiresLogin)) {\n    if (matchUserGroup(userGroups, routeRequiresLogin))\n      return renderRoutes(\n        routes.StaticRoutes as RouteConfig[],\n        {\n          projectId,\n          contentTypeId,\n          entry,\n          mappedEntry,\n          isLoggedIn,\n        } as RouteComponentProps\n      );\n  }\n\n  // Render a supplied Loading component if the route\n  // is not a static route and is in a loading state\n  if (isLoading && !isNotFound && loadingComponent) {\n    const LoadingComponent = loadingComponent;\n    return <LoadingComponent />;\n  }\n\n  // Match any defined Content Type Mappings\n  if (contentTypeId && !(!isLoggedIn && routeRequiresLogin)) {\n    const MatchedComponent = routes.ContentTypeMappings.find(\n      item => item.contentTypeID === contentTypeId\n    );\n\n    if (MatchedComponent && !(MatchedComponent.requireLogin && !isLoggedIn)) {\n      if (matchUserGroup(userGroups, MatchedComponent.requireLogin))\n        return (\n          <MatchedComponent.component\n            projectId={projectId}\n            contentTypeId={contentTypeId}\n            entry={entry}\n            mappedEntry={mappedEntry}\n            isLoggedIn={isLoggedIn}\n          />\n        );\n    }\n  }\n\n  const NotFoundComponent = notFoundComponent ? notFoundComponent : NotFound;\n  if (isNotFound || isError) {\n    return (\n      <Status code={statusCode}>\n        <NotFoundComponent statusCode={statusCode} statusText={statusText} />\n      </Status>\n    );\n  }\n\n  return null;\n};\nconst mapStateToPropsMemoized = createSelector(\n  selectRouteEntryContentTypeId,\n  selectRouteEntry,\n  selectRouteIsError,\n  selectIsNotFound,\n  selectRouteLoading,\n  selectUserIsAuthenticated,\n  selectMappedEntry,\n  selectCurrentProject,\n  selectCurrentPath,\n  selectRouteStatusCode,\n  selectRouteErrorMessage,\n  selectUserGroups,\n  (\n    contentTypeId,\n    entry,\n    isError,\n    isNotFound,\n    isLoading,\n    isLoggedIn,\n    mappedEntry,\n    projectId,\n    statePath,\n    statusCode,\n    statusText,\n    userGroups\n  ) => ({\n    contentTypeId,\n    entry,\n    isError,\n    isNotFound,\n    isLoading,\n    isLoggedIn,\n    mappedEntry,\n    projectId,\n    statePath,\n    statusCode,\n    statusText,\n    userGroups,\n  })\n);\n\n// const mapStateToProps = state => {\n//   return {\n//     contentTypeId: selectRouteEntryContentTypeId(state),\n//     entry: selectRouteEntry(state),\n//     isError: selectRouteIsError(state),\n//     isNotFound: selectIsNotFound(state),\n//     isLoading: selectRouteLoading(state),\n//     isLoggedIn: selectUserIsAuthenticated(state),\n//     mappedEntry: selectMappedEntry(state),\n//     projectId: selectCurrentProject(state),\n//     statePath: selectCurrentPath(state),\n//     statusCode: selectRouteStatusCode(state),\n//     statusText: selectRouteErrorMessage(state),\n//     userGroups: selectUserGroups(state),\n//   };\n// };\n\nconst mapDispatchToProps = {\n  setNavigationPath,\n};\n\nexport default hot(module)(\n  connect(mapStateToPropsMemoized, mapDispatchToProps)(toJS(RouteLoader))\n);\n"],"names":["NotFound","statusCode","statusText","React","background","color","fontSize","padding","Status","code","children","Route","staticContext","replaceDoubleSlashRecursive","path","nextPath","replace","match","getTrimmedPath","lastChar","length","substring","RouteLoader","contentTypeId","entry","isError","isLoading","isLoggedIn","isNotFound","loadingComponent","mappedEntry","notFoundComponent","projectId","routes","setNavigationPath","statePath","userGroups","withEvents","location","useLocation","trimmedPath","pathname","matchedStaticRoute","matchRoutes","StaticRoutes","isStaticRoute","staticRoute","routeRequiresLogin","route","requireLogin","setPath","useCallback","serverPath","isExact","includes","url","fetchNodeLevel","split","splice","join","filter","p","startsWith","window","useEffect","Redirect","matchUserGroup","renderRoutes","LoadingComponent","MatchedComponent","ContentTypeMappings","find","item","contentTypeID","NotFoundComponent","mapStateToPropsMemoized","createSelector","selectRouteEntryContentTypeId","selectRouteEntry","selectRouteIsError","selectIsNotFound","selectRouteLoading","selectUserIsAuthenticated","selectMappedEntry","selectCurrentProject","selectCurrentPath","selectRouteStatusCode","selectRouteErrorMessage","selectUserGroups","mapDispatchToProps","hot","module","connect","toJS"],"mappings":"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"}