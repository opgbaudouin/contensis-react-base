{"version":3,"file":"App-b681e8eb.js","sources":["../src/redux/store/history.js","../src/util/ContensisDeliveryApi.js","../src/redux/sagas/navigation.js","../src/util/schema.ts","../src/routing/util/expressions.ts","../src/routing/util/queries.ts","../src/routing/redux/sagas.js","../src/user/redux/sagas/register.js","../src/user/util/userHelper.js","../src/user/redux/sagas/resetPassword.js","../src/user/redux/sagas/index.js","../src/redux/sagas/index.js","../src/util/pickProject.js","../src/app/App.tsx"],"sourcesContent":["import { createBrowserHistory, createMemoryHistory } from 'history';\n\n// Create a history depending on the environment\nconst selectedHistory =\n  typeof window !== 'undefined' ? createBrowserHistory : createMemoryHistory;\n\nexport const history = (options = {}) => selectedHistory(options);\nexport const browserHistory = selectedHistory();\n","import { Client } from 'contensis-delivery-api';\nimport { setSurrogateKeys } from '../routing/redux/actions';\nimport { reduxStore } from '~/redux/store/store';\n\nconst storeSurrogateKeys = response => {\n  const keys = response.headers.get\n    ? response.headers.get('surrogate-key')\n    : response.headers.map['surrogate-key'];\n  if (keys) reduxStore.dispatch(setSurrogateKeys(keys, response.url));\n};\n\nconst getClientConfig = project => {\n  let config = DELIVERY_API_CONFIG; /* global DELIVERY_API_CONFIG */\n  config.responseHandler = {};\n\n  if (project) {\n    config.projectId = project;\n  }\n\n  // we only want the surrogate key header in a server context\n  if (typeof window === 'undefined') {\n    config.defaultHeaders = {\n      'x-require-surrogate-key': true,\n    };\n    config.responseHandler[200] = storeSurrogateKeys;\n  }\n\n  if (\n    typeof window !== 'undefined' &&\n    PROXY_DELIVERY_API /* global PROXY_DELIVERY_API */\n  ) {\n    // ensure a relative url is used to bypass the need for CORS (separate OPTIONS calls)\n    config.rootUrl = '';\n    config.responseHandler[404] = () => null;\n  }\n  return config;\n};\n\nexport * from 'contensis-delivery-api';\n\nclass DeliveryApi {\n  getClientSideVersionStatus = () => {\n    if (typeof window != 'undefined') {\n      const currentHostname = window.location.hostname;\n      return this.getVersionStatusFromHostname(currentHostname);\n    }\n    return null;\n  };\n  getVersionStatusFromHostname = currentHostname => {\n    if (currentHostname.indexOf('localhost') > -1) return 'latest';\n\n    if (currentHostname.endsWith('contensis.cloud')) {\n      if (currentHostname.indexOf('preview.') > -1) {\n        return 'latest';\n      } else {\n        return 'published';\n      }\n    }\n\n    if (currentHostname.endsWith('cloud.contensis.com')) {\n      if (currentHostname.indexOf('preview-') > -1) {\n        return 'latest';\n      } else {\n        return 'published';\n      }\n    }\n\n    return 'published';\n  };\n  search = (query, linkDepth, project, env) => {\n    const client = Client.create(getClientConfig(project, env));\n    return client.entries.search(\n      query,\n      typeof linkDepth !== 'undefined' ? linkDepth : 1\n    );\n  };\n  getClient = (deliveryApiStatus = 'published', project, env) => {\n    const baseConfig = getClientConfig(project, env);\n    baseConfig.versionStatus = deliveryApiStatus;\n    return Client.create(baseConfig);\n  };\n  getEntry = (\n    id,\n    linkDepth = 0,\n    deliveryApiStatus = 'published',\n    project,\n    env\n  ) => {\n    const baseConfig = getClientConfig(project, env);\n    baseConfig.versionStatus = deliveryApiStatus;\n    const client = Client.create(baseConfig);\n    // return client.entries.get(id, linkDepth);\n    return client.entries.get({ id, linkDepth });\n  };\n}\n\nexport const deliveryApi = new DeliveryApi();\n\nclass CacheNode {\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n    this.next = null;\n    this.prev = null;\n  }\n}\n\nclass LruCache {\n  constructor(limit = 100) {\n    this.map = {};\n    this.head = null;\n    this.tail = null;\n    this.limit = limit || 100;\n    this.size = 0;\n  }\n\n  get(key) {\n    if (this.map[key]) {\n      let value = this.map[key].value;\n      let node = new CacheNode(key, value);\n      this.remove(key);\n      this.setHead(node);\n      return value;\n    }\n  }\n\n  set(key, value) {\n    let node = new CacheNode(key, value);\n    if (this.map[key]) {\n      this.remove(key);\n    } else {\n      if (this.size >= this.limit) {\n        delete this.map[this.tail.key];\n        this.size--;\n        this.tail = this.tail.prev;\n        this.tail.next = null;\n      }\n    }\n    this.setHead(node);\n  }\n\n  setHead(node) {\n    node.next = this.head;\n    node.prev = null;\n    if (this.head) {\n      this.head.prev = node;\n    }\n    this.head = node;\n    if (!this.tail) {\n      this.tail = node;\n    }\n    this.size++;\n    this.map[node.key] = node;\n  }\n\n  remove(key) {\n    let node = this.map[key];\n    if (node.prev) {\n      node.prev.next = node.next;\n    } else {\n      this.head = node.next;\n    }\n    if (node.next) {\n      node.next.prev = node.prev;\n    } else {\n      this.tail = node.prev;\n    }\n    delete this.map[key];\n    this.size--;\n  }\n}\n\nclass CachedSearch {\n  cache = new LruCache();\n  taxonomyLookup = {};\n\n  search(query, linkDepth, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      project + JSON.stringify(query) + linkDepth.toString(),\n      () => client.entries.search(query, linkDepth)\n    );\n  }\n\n  get(id, linkDepth, versionStatus, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    client.clientConfig.versionStatus = versionStatus;\n    return this.request(id, () => client.entries.get({ id, linkDepth }));\n  }\n\n  getContentType(id, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(`[CONTENT TYPE] ${id} ${project}`, () =>\n      client.contentTypes.get(id)\n    );\n  }\n\n  getTaxonomyNode(key, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(`[TAXONOMY NODE] ${key}`, () =>\n      client.taxonomy\n        .resolveChildren(key)\n        .then(node => this.extendTaxonomyNode(node))\n    );\n  }\n\n  getRootNode(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(`${project} / ${JSON.stringify(options)}`, () =>\n      client.nodes.getRoot(options)\n    );\n  }\n\n  getNode(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} ${(options && options.path) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.get(options)\n    );\n  }\n\n  getAncestors(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} [A] ${(options && options.id) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.getAncestors(options)\n    );\n  }\n\n  getChildren(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} [C] ${(options && options.id) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.getChildren(options)\n    );\n  }\n\n  getSiblings(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} [S] ${(options && options.id) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.getSiblings(options)\n    );\n  }\n\n  request(key, execute) {\n    if (!this.cache.get(key) || typeof window == 'undefined') {\n      let promise = execute();\n      this.cache.set(key, promise);\n      promise.catch(() => {\n        this.cache.remove(key);\n      });\n    }\n    return this.cache.get(key);\n  }\n\n  extendTaxonomyNode(node) {\n    let id = this.getTaxonomyId(node);\n    this.taxonomyLookup[id] = node.key;\n    return {\n      ...node,\n      id,\n      children: node.children\n        ? node.children.map(n => this.extendTaxonomyNode(n))\n        : null,\n    };\n  }\n\n  getTaxonomyId(node) {\n    if (node.key) {\n      let parts = node.key.split('/');\n      return parts[parts.length - 1];\n    }\n    return '';\n  }\n\n  getTaxonomyKey(id) {\n    return this.taxonomyLookup[id];\n  }\n}\n\nexport const cachedSearch = new CachedSearch();\n","import { takeEvery, put, select } from 'redux-saga/effects';\n\nimport { deliveryApi } from '~/util/ContensisDeliveryApi';\nimport {\n  GET_NODE_TREE,\n  SET_NODE_TREE,\n  GET_NODE_TREE_ERROR,\n} from '~/redux/types/navigation';\nimport { hasNavigationTree } from '~/redux/selectors/navigation';\nimport { selectVersionStatus } from '~/redux/selectors/version';\nimport { selectCurrentProject } from '~/routing/redux/selectors';\n\nexport const navigationSagas = [takeEvery(GET_NODE_TREE, ensureNodeTreeSaga)];\n\nexport function* ensureNodeTreeSaga(action) {\n  const state = yield select();\n  try {\n    if (!hasNavigationTree(state)) {\n      const deliveryApiVersionStatus = yield select(selectVersionStatus);\n      const project = yield select(selectCurrentProject);\n      const nodes = yield deliveryApi\n        .getClient(deliveryApiVersionStatus, project)\n        .nodes.getRoot({\n          depth: action.treeDepth || 0,\n        });\n      if (nodes) {\n        yield put({ type: SET_NODE_TREE, nodes });\n      } else {\n        yield put({ type: GET_NODE_TREE_ERROR });\n      }\n    }\n  } catch (ex) {\n    yield put({ type: GET_NODE_TREE_ERROR, error: ex.toString() });\n  }\n}\n","export const DataFormats = {\n  entry: 'entry',\n  webpage: 'webpage',\n};\n\nconst sys = {\n  contentTypeId: 'sys.contentTypeId',\n  dataFormat: 'sys.dataFormat',\n  filename: 'sys.properties.filename',\n  id: 'sys.id',\n  includeInSearch: 'sys.metadata.includeInSearch',\n  slug: 'sys.slug',\n  uri: 'sys.uri',\n  versionStatus: 'sys.versionStatus',\n};\n\nexport const Fields = {\n  entryTitle: 'entryTitle',\n  entryDescription: 'entryDescription',\n  keywords: 'keywords',\n  sys,\n  contentTypeId: 'sys.contentTypeId',\n  wildcard: '*',\n};\n\nexport const VersionStatus = {\n  published: 'published',\n  latest: 'latest',\n};\n","import { IExpression } from 'contensis-core-api';\nimport { Op } from 'contensis-delivery-api';\nimport { Fields } from '~/util/schema';\n\nexport const fieldExpression = (\n  field: string,\n  value: string | string[],\n  operator = 'equalTo',\n  weight = null\n) => {\n  if (!field || !value) return [];\n  if (Array.isArray(value)) return equalToOrIn(field, value, operator);\n  else\n    return !weight\n      ? [Op[operator](field, value)]\n      : [Op[operator](field, value).weight(weight)];\n};\n\nexport const defaultExpressions = (\n  versionStatus: 'published' | 'latest'\n): IExpression[] => {\n  return [Op.equalTo(Fields.sys.versionStatus, versionStatus)];\n};\n\nconst equalToOrIn = (field: string, arr: string[], operator = 'equalTo') =>\n  arr.length === 0\n    ? []\n    : arr.length === 1\n    ? [Op[operator](field, arr[0])]\n    : [Op.in(field, ...arr)];\n","import { Query } from '~/util/ContensisDeliveryApi';\nimport { fieldExpression, defaultExpressions } from './expressions';\n\nexport const routeEntryByFieldsQuery = (\n  id: string,\n  language = 'en-GB',\n  fields: string[] = [],\n  versionStatus: 'published' | 'latest' = 'published'\n) => {\n  const query = new Query(\n    ...[\n      ...fieldExpression('sys.id', id),\n      ...fieldExpression('sys.language', language),\n      ...defaultExpressions(versionStatus),\n    ]\n  );\n  query.fields = fields;\n  return query;\n};\n","import * as log from 'loglevel';\nimport { takeEvery, put, select, call, all } from 'redux-saga/effects';\n\nimport {\n  SET_ENTRY,\n  SET_ANCESTORS,\n  SET_NAVIGATION_PATH,\n  SET_ROUTE,\n  SET_SIBLINGS,\n  UPDATE_LOADING_STATE,\n} from './types';\nimport { GET_NODE_TREE } from '~/redux/types/navigation';\nimport {\n  selectCurrentAncestors,\n  selectCurrentNode,\n  selectCurrentProject,\n  selectMappedEntry,\n  selectRouteEntry,\n  selectRouteEntryEntryId,\n  selectRouteEntryLanguage,\n} from './selectors';\nimport { hasNavigationTree } from '~/redux/selectors/navigation';\nimport { selectVersionStatus } from '~/redux/selectors/version';\nimport { ensureNodeTreeSaga } from '~/redux/sagas/navigation';\nimport { handleRequiresLoginSaga } from '~/user/redux/sagas/login';\n\nimport { findContentTypeMapping } from '../util/find-contenttype-mapping';\nimport { routeEntryByFieldsQuery } from '../util/queries';\nimport { cachedSearch, deliveryApi } from '~/util/ContensisDeliveryApi';\nimport { injectRedux as reduxInjector } from '~/redux/store/injectors';\n\nexport const routingSagas = [\n  takeEvery(SET_NAVIGATION_PATH, getRouteSaga),\n  takeEvery(SET_ROUTE, setRouteSaga),\n];\n\n/**\n * To navigate / push a specific route via redux middleware\n * @param {path, state} action\n */\nfunction* setRouteSaga(action) {\n  yield put({\n    type: 'CALL_HISTORY_METHOD',\n    payload: {\n      method: 'push',\n      args: [action.path, action.state],\n    },\n  });\n}\n\nfunction* getRouteSaga(action) {\n  let entry = null;\n  try {\n    const {\n      withEvents,\n      routes: { ContentTypeMappings = {} } = {},\n      staticRoute,\n    } = action;\n\n    // Inject redux { key, reducer, saga } provided by staticRoute\n    if (staticRoute && staticRoute.route.injectRedux)\n      yield call(reduxInjectorSaga, staticRoute.route.injectRedux);\n\n    // Variables we will pass to setRouteEntry\n    let pathNode = null,\n      ancestors = null,\n      siblings = null;\n\n    // These variables are the return values from\n    // calls to withEvents.onRouteLoad and onRouteLoaded\n    let appsays,\n      requireLogin = false;\n\n    if (withEvents && withEvents.onRouteLoad) {\n      appsays = yield withEvents.onRouteLoad(action);\n    }\n    // if appsays customNavigation: true, we will set doNavigation to false\n    // if appsays customNavigation: { ... }, we will set doNavigation to the customNavigation object and check for child elements\n    // if appsays nothing we will set doNavigation to true and continue to do navigation calls\n    const doNavigation =\n      !appsays ||\n      (appsays && appsays.customNavigation === true\n        ? false\n        : (appsays && appsays.customNavigation) || true);\n\n    const entryLinkDepth =\n      appsays && appsays.entryLinkDepth !== undefined\n        ? appsays.entryLinkDepth\n        : 3;\n    const setContentTypeLimits = !!ContentTypeMappings.find(\n      ct => ct.fields || ct.linkDepth || ct.nodeOptions\n    );\n\n    const state = yield select();\n    const routeEntry = selectRouteEntry(state, 'js');\n    const routeNode = selectCurrentNode(state, 'js');\n    const currentPath = action.path; //selectCurrentPath(state);\n    const deliveryApiStatus = selectVersionStatus(state);\n    const project = selectCurrentProject(state);\n    // const isHome = currentPath === '/';\n    const isPreview = currentPath && currentPath.startsWith('/preview/');\n    const defaultLang = (appsays && appsays.defaultLang) || 'en-GB';\n\n    if (\n      !isPreview &&\n      ((appsays && appsays.customRouting) ||\n        (staticRoute && !staticRoute.route.fetchNode) ||\n        (routeEntry &&\n          action.statePath === action.path &&\n          (appsays && appsays.refetchNode) !== true))\n    ) {\n      // To prevent erroneous 404s and wasted network calls, this covers\n      // - appsays customRouting and does SET_ENTRY etc. via the consuming app\n      // - all staticRoutes (where custom 'route.fetchNode' attribute is falsey)\n      // - standard Contensis SiteView Routing where we already have that entry in state\n      if (\n        routeEntry &&\n        (!staticRoute || (staticRoute.route && staticRoute.route.fetchNode))\n      ) {\n        pathNode = { ...routeNode, entry: null };\n        pathNode.entry = entry = routeEntry;\n        //Do nothing, the entry is allready the right one.\n        // yield put({\n        //   type: SET_ENTRY,\n        //   entry,\n        //   node: routeNode,\n        //   isLoading: false,\n        // });\n        yield put({\n          type: UPDATE_LOADING_STATE,\n          isLoading: false,\n        });\n      } else\n        yield call(\n          setRouteEntry,\n          routeEntry,\n          yield select(selectCurrentNode),\n          yield select(selectCurrentAncestors)\n        );\n    } else {\n      // // Handle homepage\n      // if (isHome) {\n      //   pathNode = yield cachedSearch.getRootNode(\n      //     {\n      //       depth: childrenDepth,\n      //       entryFields: '*',\n      //       entryLinkDepth,\n      //       language: defaultLang,\n      //       versionStatus: deliveryApiStatus,\n      //     },\n      //     project\n      //   );\n      //   ({ entry } = pathNode || {});\n      // Handle preview routes\n      if (isPreview) {\n        let splitPath = currentPath.split('/');\n        let entryGuid = splitPath[2];\n        let language = defaultLang;\n        if (splitPath.length >= 3) {\n          //set lang key if available in the path, else use default lang\n          //assumes preview url on content type is: http://preview.ALIAS.contensis.cloud/preview/{GUID}/{LANG}\n          if (splitPath.length == 4) language = splitPath[3];\n          // According to product dev we cannot use Node API\n          // for previewing entries as it gives a response of []\n          // -- apparently it is not correct to request latest content\n          // with Node API\n\n          let previewEntry = yield deliveryApi\n            .getClient(deliveryApiStatus, project)\n            .entries.get({\n              id: entryGuid,\n              language,\n              linkDepth: entryLinkDepth,\n            });\n          if (previewEntry) {\n            pathNode = { entry: previewEntry };\n            ({ entry } = pathNode || {});\n          }\n        }\n      } else {\n        // Handle all other routes\n        const childrenDepth =\n          doNavigation === true || doNavigation.children === true\n            ? 1\n            : (doNavigation && doNavigation.children) || 0;\n\n        pathNode = yield cachedSearch.getNode(\n          {\n            depth: childrenDepth,\n            path: currentPath,\n            entryFields: setContentTypeLimits\n              ? ['sys.contentTypeId', 'sys.id']\n              : '*',\n            entryLinkDepth: setContentTypeLimits ? 0 : entryLinkDepth,\n            language: defaultLang,\n            versionStatus: deliveryApiStatus,\n          },\n          project\n        );\n        ({ entry } = pathNode || {});\n\n        if (\n          setContentTypeLimits &&\n          pathNode &&\n          pathNode.entry &&\n          pathNode.entry.sys &&\n          pathNode.entry.sys.id\n        ) {\n          // Get fields[] and linkDepth from ContentTypeMapping to get the entry data\n          // at a specified depth with specified fields\n          const {\n            fields,\n            linkDepth,\n            nodeOptions = {},\n          } = findContentTypeMapping(\n            ContentTypeMappings,\n            pathNode.entry.sys.contentTypeId\n          ) || {};\n          const query = routeEntryByFieldsQuery(\n            pathNode.entry.sys.id,\n            pathNode.entry.sys.language,\n            fields,\n            deliveryApiStatus\n          );\n          const payload = yield cachedSearch.search(\n            query,\n            linkDepth || entryLinkDepth || 0,\n            project\n          );\n          if (payload && payload.items && payload.items.length > 0) {\n            pathNode.entry = entry = payload.items[0];\n          }\n\n          if (childrenDepth > 0 || nodeOptions.children) {\n            const childrenOptions = nodeOptions.children || {};\n            // We need to make a separate call for child nodes if the first node query has been\n            // limited by linkDepth or fields[]\n            const nodeWithChildren = yield cachedSearch.getNode({\n              depth:\n                childrenOptions.depth !== undefined\n                  ? childrenOptions.depth\n                  : childrenDepth,\n              path: currentPath,\n              entryFields: childrenOptions.fields || fields || '*',\n              entryLinkDepth:\n                childrenOptions.linkDepth !== undefined\n                  ? childrenOptions.linkDepth\n                  : linkDepth !== undefined\n                  ? linkDepth\n                  : entryLinkDepth,\n              language: defaultLang,\n              versionStatus: deliveryApiStatus,\n            });\n            if (nodeWithChildren && nodeWithChildren.children) {\n              pathNode.children = nodeWithChildren.children;\n            }\n          }\n        }\n      }\n\n      if (pathNode && pathNode.id) {\n        if (doNavigation === true || doNavigation.ancestors) {\n          try {\n            ancestors = yield cachedSearch.getAncestors(\n              {\n                id: pathNode.id,\n                language: defaultLang,\n                versionStatus: deliveryApiStatus,\n              },\n              project\n            );\n          } catch (ex) {\n            log.info('Problem fetching ancestors', ex);\n          }\n        }\n\n        if (doNavigation === true || doNavigation.siblings) {\n          try {\n            siblings = yield cachedSearch.getSiblings(\n              {\n                id: pathNode.id,\n                language: defaultLang,\n                versionStatus: deliveryApiStatus,\n              },\n              project\n            );\n          } catch (ex) {\n            log.info('Problem fetching siblings', ex);\n          }\n        }\n      }\n    }\n\n    const contentTypeMapping =\n      findContentTypeMapping(\n        ContentTypeMappings,\n        pathNode?.entry?.sys?.contentTypeId\n      ) || {};\n\n    // Inject redux { key, reducer, saga } provided by ContentTypeMapping\n    if (contentTypeMapping.injectRedux)\n      yield call(reduxInjectorSaga, contentTypeMapping.injectRedux);\n\n    if (withEvents && withEvents.onRouteLoaded) {\n      // Check if the app has provided a requireLogin boolean flag or groups array\n      // in addition to checking if requireLogin is set in the route definition\n      ({ requireLogin } =\n        (yield withEvents.onRouteLoaded({ ...action, entry })) || {});\n    }\n\n    if (requireLogin !== false) {\n      // Do not call the login feature saga if requireLogin is false\n      yield call(handleRequiresLoginSaga, {\n        ...action,\n        entry,\n        requireLogin,\n      });\n    }\n\n    if (\n      pathNode &&\n      pathNode.entry &&\n      pathNode.entry.sys &&\n      pathNode.entry.sys.id\n    ) {\n      entry = pathNode.entry;\n      const { entryMapper } = contentTypeMapping;\n\n      yield call(\n        setRouteEntry,\n        entry,\n        pathNode,\n        ancestors,\n        siblings,\n        entryMapper,\n        false,\n        appsays && appsays.refetchNode\n      );\n    } else {\n      if (staticRoute)\n        yield call(setRouteEntry, null, pathNode, ancestors, siblings);\n      else yield call(do404);\n    }\n    if (!appsays || !appsays.preventScrollTop) {\n      // Scroll into View\n      if (typeof window !== 'undefined') {\n        window.scroll({\n          top: 0,\n        });\n      }\n    }\n\n    if (\n      !hasNavigationTree(state) &&\n      (doNavigation === true || doNavigation.tree)\n    )\n      if (typeof window !== 'undefined') {\n        yield put({\n          type: GET_NODE_TREE,\n          treeDepth:\n            doNavigation === true ||\n            !doNavigation.tree ||\n            doNavigation.tree === true\n              ? 2\n              : doNavigation.tree,\n        });\n      } else {\n        yield call(ensureNodeTreeSaga);\n      }\n  } catch (e) {\n    log.error(...['Error running route saga:', e, e.stack]);\n    yield call(do500, e);\n  }\n}\n\nfunction* setRouteEntry(\n  entry,\n  node,\n  ancestors,\n  siblings,\n  entryMapper,\n  notFound = false,\n  remapEntry = false\n) {\n  const entrySys = (entry && entry.sys) || {};\n\n  const currentEntryId = yield select(selectRouteEntryEntryId);\n  const currentEntryLang = yield select(selectRouteEntryLanguage);\n  const mappedEntry =\n    currentEntryId === entrySys.id &&\n    currentEntryLang === entrySys.language &&\n    remapEntry === false\n      ? (yield select(selectMappedEntry, 'js')) || {}\n      : yield mapRouteEntry(entryMapper, {\n          ...node,\n          entry,\n          ancestors,\n          siblings,\n        });\n\n  yield all([\n    put({\n      type: SET_ENTRY,\n      id: entrySys.id,\n      entry,\n      mappedEntry,\n      node,\n      notFound,\n    }),\n    ancestors &&\n      put({\n        type: SET_ANCESTORS,\n        ancestors,\n      }),\n    siblings &&\n      put({\n        type: SET_SIBLINGS,\n        siblings,\n      }),\n  ]);\n}\n\nfunction* mapRouteEntry(entryMapper, node) {\n  try {\n    if (typeof entryMapper === 'function') {\n      const state = yield select();\n      const mappedEntry = yield call(entryMapper, node, state);\n      return mappedEntry;\n    }\n  } catch (e) {\n    log.error(...['Error running entryMapper:', e, e.stack]);\n  }\n  return;\n}\n\nfunction* do404() {\n  yield call(clientReloadHitServer);\n  yield put({\n    type: SET_ENTRY,\n    id: null,\n    entry: null,\n    notFound: true,\n  });\n}\n\nfunction* clientReloadHitServer() {\n  const stateEntry = yield select(selectRouteEntry);\n\n  // If in client and there is a stateEntry.sys field reload the page,\n  // on the 2nd load stateEntry.sys should be null at this point,\n  // we do not wish to reload again and get stuck in an infinite reloading loop\n  if (typeof window !== 'undefined' && (stateEntry?.sys || null)) {\n    window.location.reload();\n  }\n}\n\nfunction* do500(error) {\n  yield put({\n    type: SET_ENTRY,\n    id: null,\n    entry: null,\n    notFound: true,\n    isError: true,\n    error,\n    statusCode: error && error.status ? error.status : 500,\n  });\n}\n\nfunction* reduxInjectorSaga(injectorFn) {\n  if (typeof injectorFn === 'function') {\n    const { key, reducer, saga } = yield injectorFn();\n    reduxInjector({ key, reducer, saga });\n  }\n}\n","import { to } from 'await-to-js';\nimport { put, select, takeEvery } from 'redux-saga/effects';\nimport { setRoute } from '~/routing/redux/actions';\nimport { selectCurrentSearch } from '~/routing/redux/selectors';\nimport { queryParams } from '~/util/navigation';\nimport {\n  REGISTER_USER,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_FAILED,\n} from '../types';\n\nexport const registerSagas = [\n  takeEvery(REGISTER_USER, registerSaga),\n  takeEvery(REGISTER_USER_SUCCESS, redirectSaga),\n];\n\nfunction* registerSaga({ user, mappers }) {\n  let requestBody = user;\n  // Allow use of request mapper to take a user object\n  // of any format and return the payload for the api request\n  if (mappers && mappers.request && typeof mappers.request === 'function') {\n    requestBody = yield mappers.request(user);\n  }\n\n  // Make POST call to register API\n  const response = yield fetch('/account/register', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(requestBody),\n  });\n\n  if (response.ok) {\n    let mappedResponse;\n    const [, responseBody] = yield to(response.json());\n    if (responseBody) {\n      // Allow use of response mapper to convert the successful user object\n      // from the api response body into a user object of any format\n      if (\n        mappers &&\n        mappers.response &&\n        typeof mappers.response === 'function'\n      ) {\n        mappedResponse = yield mappers.response(responseBody);\n      }\n      // Update user object with mappedResponse or responseBody\n      yield put({\n        type: REGISTER_USER_SUCCESS,\n        user: mappedResponse || responseBody,\n      });\n    } else {\n      // OK response but unable to parse the response body\n      yield put({\n        type: REGISTER_USER_FAILED,\n        error: {\n          message:\n            'Unable to parse the created user from the register service response',\n        },\n      });\n    }\n  } else {\n    // Not OK responses, these can be due to service availability\n    // or status codes echoed from the responses received from\n    // management api when registering the user\n    const [, errorResponse] = yield to(response.json());\n    const error = (errorResponse && errorResponse.error) || errorResponse || {};\n    // Get something meaningful from the response if there is no message in the body\n    if (!error.message) {\n      error.message = `Registration service: ${response.statusText}`;\n      error.status = response.status;\n    }\n    yield put({\n      type: REGISTER_USER_FAILED,\n      error,\n    });\n  }\n}\n\nfunction* redirectSaga() {\n  // Check if querystring contains a redirect_uri\n  const currentQs = queryParams(yield select(selectCurrentSearch));\n  const redirectUri = currentQs.redirect_uri || currentQs.redirect;\n\n  // We must use redux based navigation to preserve the registration state\n  if (redirectUri) yield put(setRoute(redirectUri));\n}\n","const PAP_URL = 'https://pap.zengenti.com';\n\nconst USER_ENVS_URI = 'my-environments';\nconst USER_RESEND_VERIFICATION_URI = 'account/verify/resend';\nconst USER_REQUEST_PASSWORD_RESET_URI = 'account/reset';\nconst USER_RESET_PASSWORD_URI = 'account/reset/password';\n\nconst USER_ENVS_URL = `${PAP_URL}/${USER_ENVS_URI}`;\n\nconst BASE_OPTIONS = {\n  method: 'GET',\n  headers: { 'Content-Type': 'application/json' },\n};\n\nexport class UserHelper {\n  static async GetUsersEnvironments(securityToken) {\n    const options = {\n      ...BASE_OPTIONS,\n      headers: {\n        'x-security-token': securityToken,\n      },\n    };\n    return await UserHelper.get(USER_ENVS_URL, options);\n  }\n  static async ResendUserVerification(userEmail) {\n    const options = {\n      ...BASE_OPTIONS,\n    };\n    return await UserHelper.get(\n      `/${USER_RESEND_VERIFICATION_URI}?user=${userEmail}`,\n      options\n    );\n  }\n  static async RequestPasswordReset(userEmailObject) {\n    const options = {\n      ...BASE_OPTIONS,\n      body: JSON.stringify(userEmailObject),\n    };\n    options.method = 'POST';\n\n    return await UserHelper.get(`/${USER_REQUEST_PASSWORD_RESET_URI}`, options);\n  }\n  static async ResetPassword(resetPasswordObject) {\n    const options = {\n      ...BASE_OPTIONS,\n      body: JSON.stringify(resetPasswordObject),\n    };\n    options.method = 'POST';\n\n    return await UserHelper.get(`/${USER_RESET_PASSWORD_URI}`, options);\n  }\n\n  static async get(url, options = BASE_OPTIONS) {\n    try {\n      const responseBody = await api(url, options);\n      return responseBody;\n    } catch (err) {\n      return { error: { message: err.message } };\n    }\n  }\n}\n\nasync function api(url, options) {\n  return fetch(url, options)\n    .then(async response => {\n      return response.json().then(data => data);\n    })\n    .catch(error => {\n      throw error;\n    });\n}\n","import { put, takeEvery, select } from 'redux-saga/effects';\nimport { to } from 'await-to-js';\nimport { getManagementApiClient } from '~/user/util/ContensisManagementApi';\nimport { UserHelper } from '~/user/util/userHelper';\nimport { selectClientCredentials } from '../selectors';\nimport {\n  REQUEST_USER_PASSWORD_RESET,\n  RESET_USER_PASSWORD,\n  REQUEST_USER_PASSWORD_RESET_ERROR,\n  REQUEST_USER_PASSWORD_RESET_SENDING,\n  REQUEST_USER_PASSWORD_RESET_SUCCESS,\n  RESET_USER_PASSWORD_ERROR,\n  RESET_USER_PASSWORD_SENDING,\n  RESET_USER_PASSWORD_SUCCESS,\n  CHANGE_USER_PASSWORD,\n  CHANGE_USER_PASSWORD_SENDING,\n  CHANGE_USER_PASSWORD_SUCCESS,\n  CHANGE_USER_PASSWORD_ERROR,\n} from '../types';\n\nexport const resetPasswordSagas = [\n  takeEvery(REQUEST_USER_PASSWORD_RESET, requestPasswordResetSaga),\n  takeEvery(RESET_USER_PASSWORD, resetPasswordSaga),\n  takeEvery(CHANGE_USER_PASSWORD, changePasswordSaga),\n];\n\nfunction* requestPasswordResetSaga(action) {\n  const userEmailObject = action.userEmailObject;\n  yield put({\n    type: REQUEST_USER_PASSWORD_RESET_SENDING,\n  });\n  if (userEmailObject && userEmailObject.userEmail) {\n    try {\n      const passwordResetRequestResponse =\n        yield UserHelper.RequestPasswordReset(userEmailObject);\n\n      if (passwordResetRequestResponse) {\n        if (!passwordResetRequestResponse.error) {\n          yield put({\n            type: REQUEST_USER_PASSWORD_RESET_SUCCESS,\n          });\n        } else {\n          yield put({\n            type: REQUEST_USER_PASSWORD_RESET_ERROR,\n            error: passwordResetRequestResponse.error.message,\n          });\n        }\n      } else {\n        yield put({\n          type: REQUEST_USER_PASSWORD_RESET_ERROR,\n          error: 'No response from server',\n        });\n      }\n    } catch (error) {\n      yield put({\n        type: REQUEST_USER_PASSWORD_RESET_ERROR,\n        error: error && error.toString(),\n      });\n    }\n  } else {\n    yield put({\n      type: REQUEST_USER_PASSWORD_RESET_ERROR,\n      error: 'Invalid object',\n    });\n  }\n}\n\nfunction* resetPasswordSaga(action) {\n  const resetPasswordObject = action.resetPasswordObject;\n\n  yield put({\n    type: RESET_USER_PASSWORD_SENDING,\n  });\n  if (resetPasswordObject.token && resetPasswordObject.password) {\n    try {\n      const resetPasswordResponse = yield UserHelper.ResetPassword(\n        resetPasswordObject\n      );\n\n      if (resetPasswordResponse) {\n        if (!resetPasswordResponse.error) {\n          yield put({\n            type: RESET_USER_PASSWORD_SUCCESS,\n          });\n        } else {\n          const error =\n            (resetPasswordResponse.error.data &&\n              resetPasswordResponse.error.data.length > 0 &&\n              resetPasswordResponse.error.data[0].message) ||\n            resetPasswordResponse.error.message;\n          yield put({\n            type: RESET_USER_PASSWORD_ERROR,\n            error,\n          });\n        }\n      } else {\n        yield put({\n          type: RESET_USER_PASSWORD_ERROR,\n          error: 'No response from server',\n        });\n      }\n    } catch (error) {\n      yield put({\n        type: RESET_USER_PASSWORD_ERROR,\n        error: error && error.toString(),\n      });\n    }\n  } else {\n    yield put({\n      type: RESET_USER_PASSWORD_ERROR,\n      error: 'Invalid object',\n    });\n  }\n}\n\n// userId\n// existingPassword\n// newPassword\nfunction* changePasswordSaga(action) {\n  if (\n    !action ||\n    !action.userId ||\n    !action.currentPassword ||\n    !action.newPassword\n  ) {\n    yield put({\n      type: CHANGE_USER_PASSWORD_ERROR,\n      error: 'Invalid action object sent to changePassword saga',\n    });\n    return;\n  }\n\n  try {\n    const changePasswordObject = {\n      userId: action.userId,\n      existing: action.currentPassword,\n      new: action.newPassword,\n    };\n\n    yield put({\n      type: CHANGE_USER_PASSWORD_SENDING,\n    });\n    const clientCredentials = yield select(selectClientCredentials, 'js');\n    const client = yield getManagementApiClient({ ...clientCredentials });\n\n    const [err, res] = yield to(\n      client.security.users.updatePassword(changePasswordObject)\n    );\n\n    if (err) {\n      const error =\n        (err?.data?.data?.length > 0 && err.data.data[0].message) ||\n        err?.data?.message;\n      yield put({\n        type: CHANGE_USER_PASSWORD_ERROR,\n        error,\n      });\n      return;\n    }\n\n    // // eslint-disable-next-line no-console\n    // console.log(changePasswordObject);\n    // // eslint-disable-next-line no-console\n    // console.log(userCredentialsObject);\n    yield put({\n      type: CHANGE_USER_PASSWORD_SUCCESS,\n    });\n  } catch (error) {\n    yield put({\n      type: CHANGE_USER_PASSWORD_ERROR,\n      error: error && error.toString(),\n    });\n  }\n}\n","import { loginSagas } from './login';\nimport { registerSagas } from './register';\nimport { resetPasswordSagas } from './resetPassword';\n\nexport const userSagas = [\n  ...loginSagas,\n  ...registerSagas,\n  ...resetPasswordSagas,\n];\n","// index.js\nimport { all } from 'redux-saga/effects';\nimport { navigationSagas } from './navigation';\nimport { routingSagas } from '~/routing/redux/sagas';\nimport { userSagas } from '~/user/redux/sagas';\n\nexport default function (featureSagas = []) {\n  return function* rootSaga() {\n    const subSagas = [...routingSagas, ...navigationSagas, ...userSagas];\n    yield all([...subSagas, ...featureSagas]);\n  };\n}\n","const servers = SERVERS; /* global SERVERS */\nconst alias = servers.alias.toLowerCase();\nconst publicUri = PUBLIC_URI; /* global PUBLIC_URI */\nconst projects = PROJECTS; /* global PROJECTS */\n\n// return a projectId via the request hostname\nconst pickProject = (hostname, query) => {\n  // if localhost we can only infer via a querystring, and take your word for it\n  if (hostname == 'localhost') {\n    return (query && query.p) || projects[0].id;\n  }\n\n  // if hostname is the actual public uri we can return the first project from the list\n  if (hostname == publicUri) {\n    return projects[0].id;\n  }\n\n  let project = 'unknown';\n\n  // // go through all the defined projects\n  // Object.entries(projects).map(([, p]) => {\n  const p = projects[0];\n\n  // check if we're accessing via the project's public uri\n  if (hostname.includes(p.publicUri)) project = p.id;\n\n  // the url structure is different for website (we don't prefix)\n  if (p.id.startsWith('website')) {\n    // check for internal and external hostnames\n    // we check live and preview distinctly so our rule does not clash with\n    // hostnames that use a project prefix\n    if (\n      hostname.includes(`live-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`live.${alias}.contensis.cloud`) ||\n      hostname.includes(`preview-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`preview.${alias}.contensis.cloud`)\n    )\n      project = p.id;\n  } else {\n    // check for internal and external hostnames, prefixed with the projectId\n    if (\n      hostname.includes(`${p.id.toLowerCase()}-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`${p.id.toLowerCase()}.${alias}.contensis.cloud`)\n    )\n      project = p.id;\n  }\n  // });\n  return project === 'unknown' ? p.id : project;\n};\n\nexport default pickProject;\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { AppRootProps } from '../routing/routes';\nimport { RouteLoader } from '../routing';\n\nconst AppRoot = (props: AppRootProps) => {\n  return <RouteLoader {...props} />;\n};\n\nexport default hot(module)(AppRoot);\n"],"names":["selectedHistory","window","createBrowserHistory","createMemoryHistory","history","options","browserHistory","storeSurrogateKeys","response","keys","headers","get","map","reduxStore","dispatch","setSurrogateKeys","url","getClientConfig","project","config","DELIVERY_API_CONFIG","responseHandler","projectId","defaultHeaders","PROXY_DELIVERY_API","rootUrl","DeliveryApi","getClientSideVersionStatus","currentHostname","location","hostname","getVersionStatusFromHostname","indexOf","endsWith","search","query","linkDepth","env","client","Client","create","entries","getClient","deliveryApiStatus","baseConfig","versionStatus","getEntry","id","deliveryApi","CacheNode","constructor","key","value","next","prev","LruCache","limit","head","tail","size","node","remove","setHead","set","CachedSearch","cache","taxonomyLookup","request","JSON","stringify","toString","clientConfig","getContentType","contentTypes","getTaxonomyNode","taxonomy","resolveChildren","then","extendTaxonomyNode","getRootNode","nodes","getRoot","getNode","path","getAncestors","getChildren","getSiblings","execute","promise","catch","getTaxonomyId","children","n","parts","split","length","getTaxonomyKey","cachedSearch","navigationSagas","takeEvery","GET_NODE_TREE","ensureNodeTreeSaga","action","state","select","hasNavigationTree","deliveryApiVersionStatus","selectVersionStatus","selectCurrentProject","depth","treeDepth","put","type","SET_NODE_TREE","GET_NODE_TREE_ERROR","ex","error","sys","contentTypeId","dataFormat","filename","includeInSearch","slug","uri","Fields","entryTitle","entryDescription","keywords","wildcard","fieldExpression","field","operator","weight","Array","isArray","equalToOrIn","Op","defaultExpressions","equalTo","arr","in","routeEntryByFieldsQuery","language","fields","Query","routingSagas","SET_NAVIGATION_PATH","getRouteSaga","SET_ROUTE","setRouteSaga","payload","method","args","entry","withEvents","routes","ContentTypeMappings","staticRoute","route","injectRedux","call","reduxInjectorSaga","pathNode","ancestors","siblings","appsays","requireLogin","onRouteLoad","doNavigation","customNavigation","entryLinkDepth","undefined","setContentTypeLimits","find","ct","nodeOptions","routeEntry","selectRouteEntry","routeNode","selectCurrentNode","currentPath","isPreview","startsWith","defaultLang","customRouting","fetchNode","statePath","refetchNode","UPDATE_LOADING_STATE","isLoading","setRouteEntry","selectCurrentAncestors","splitPath","entryGuid","previewEntry","childrenDepth","entryFields","findContentTypeMapping","items","childrenOptions","nodeWithChildren","log","info","contentTypeMapping","onRouteLoaded","handleRequiresLoginSaga","entryMapper","do404","preventScrollTop","scroll","top","tree","e","stack","do500","notFound","remapEntry","entrySys","currentEntryId","selectRouteEntryEntryId","currentEntryLang","selectRouteEntryLanguage","mappedEntry","selectMappedEntry","mapRouteEntry","all","SET_ENTRY","SET_ANCESTORS","SET_SIBLINGS","clientReloadHitServer","stateEntry","reload","isError","statusCode","status","injectorFn","reducer","saga","reduxInjector","registerSagas","REGISTER_USER","registerSaga","REGISTER_USER_SUCCESS","redirectSaga","user","mappers","requestBody","fetch","Accept","body","ok","mappedResponse","responseBody","to","json","REGISTER_USER_FAILED","message","errorResponse","statusText","currentQs","queryParams","selectCurrentSearch","redirectUri","redirect_uri","redirect","setRoute","PAP_URL","USER_ENVS_URI","USER_RESEND_VERIFICATION_URI","USER_REQUEST_PASSWORD_RESET_URI","USER_RESET_PASSWORD_URI","USER_ENVS_URL","BASE_OPTIONS","UserHelper","GetUsersEnvironments","securityToken","ResendUserVerification","userEmail","RequestPasswordReset","userEmailObject","ResetPassword","resetPasswordObject","api","err","data","resetPasswordSagas","REQUEST_USER_PASSWORD_RESET","requestPasswordResetSaga","RESET_USER_PASSWORD","resetPasswordSaga","CHANGE_USER_PASSWORD","changePasswordSaga","REQUEST_USER_PASSWORD_RESET_SENDING","passwordResetRequestResponse","REQUEST_USER_PASSWORD_RESET_SUCCESS","REQUEST_USER_PASSWORD_RESET_ERROR","RESET_USER_PASSWORD_SENDING","token","password","resetPasswordResponse","RESET_USER_PASSWORD_SUCCESS","RESET_USER_PASSWORD_ERROR","userId","currentPassword","newPassword","CHANGE_USER_PASSWORD_ERROR","changePasswordObject","existing","new","CHANGE_USER_PASSWORD_SENDING","clientCredentials","selectClientCredentials","getManagementApiClient","res","security","users","updatePassword","CHANGE_USER_PASSWORD_SUCCESS","userSagas","loginSagas","featureSagas","rootSaga","subSagas","servers","SERVERS","alias","toLowerCase","publicUri","PUBLIC_URI","projects","PROJECTS","pickProject","p","includes","AppRoot","props","React","RouteLoader"],"mappings":"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"}