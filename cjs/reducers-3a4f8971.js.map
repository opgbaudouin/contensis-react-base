{"version":3,"file":"reducers-3a4f8971.js","sources":["../src/user/redux/types.js","../src/user/redux/reducers.ts"],"sourcesContent":["const ACTION_PREFIX = '@USER/';\nexport const VALIDATE_USER = `${ACTION_PREFIX}VALIDATE_USER`;\nexport const SET_AUTHENTICATION_STATE = `${ACTION_PREFIX}SET_AUTHENTICATION_STATE`;\nexport const LOGIN_USER = `${ACTION_PREFIX}LOGIN_USER`;\nexport const LOGIN_SUCCESSFUL = `${ACTION_PREFIX}LOGIN_SUCCESSFUL`;\nexport const LOGIN_FAILED = `${ACTION_PREFIX}LOGIN_FAILED`;\nexport const LOGOUT_USER = `${ACTION_PREFIX}LOGOUT_USER`;\nexport const REGISTER_USER = `${ACTION_PREFIX}REGISTER_USER`;\nexport const REGISTER_USER_SUCCESS = `${ACTION_PREFIX}REGISTER_USER_SUCCESS`;\nexport const REGISTER_USER_FAILED = `${ACTION_PREFIX}REGISTER_USER_FAILED`;\n\nexport const REQUEST_USER_PASSWORD_RESET = `${ACTION_PREFIX}REQUEST_USER_PASSWORD_RESET`;\nexport const RESET_USER_PASSWORD = `${ACTION_PREFIX}RESET_USER_PASSWORD`;\nexport const REQUEST_USER_PASSWORD_RESET_SENDING = `${ACTION_PREFIX}REQUEST_USER_PASSWORD_RESET_SENDING`;\nexport const REQUEST_USER_PASSWORD_RESET_SUCCESS = `${ACTION_PREFIX}REQUEST_USER_PASSWORD_RESET_SUCCESS`;\nexport const REQUEST_USER_PASSWORD_RESET_ERROR = `${ACTION_PREFIX}REQUEST_USER_PASSWORD_RESET_ERROR`;\nexport const RESET_USER_PASSWORD_SENDING = `${ACTION_PREFIX}RESET_USER_PASSWORD_SENDING`;\nexport const RESET_USER_PASSWORD_SUCCESS = `${ACTION_PREFIX}RESET_USER_PASSWORD_SUCCESS`;\nexport const RESET_USER_PASSWORD_ERROR = `${ACTION_PREFIX}RESET_USER_PASSWORD_ERROR`;\n\nexport const CHANGE_USER_PASSWORD = `${ACTION_PREFIX}CHANGE_USER_PASSWORD`;\nexport const CHANGE_USER_PASSWORD_SENDING = `${ACTION_PREFIX}CHANGE_USER_PASSWORD_SENDING`;\nexport const CHANGE_USER_PASSWORD_SUCCESS = `${ACTION_PREFIX}CHANGE_USER_PASSWORD_SUCCESS`;\nexport const CHANGE_USER_PASSWORD_ERROR = `${ACTION_PREFIX}CHANGE_USER_PASSWORD_ERROR`;\n","import { Draft, produce } from 'immer';\nimport { AppState } from '~/redux/appstate';\nimport {\n  REGISTER_USER,\n  REGISTER_USER_FAILED,\n  REGISTER_USER_SUCCESS,\n  SET_AUTHENTICATION_STATE,\n  LOGIN_USER,\n  LOGOUT_USER,\n  REQUEST_USER_PASSWORD_RESET_SENDING,\n  REQUEST_USER_PASSWORD_RESET_SUCCESS,\n  REQUEST_USER_PASSWORD_RESET_ERROR,\n  RESET_USER_PASSWORD_SENDING,\n  RESET_USER_PASSWORD_SUCCESS,\n  RESET_USER_PASSWORD_ERROR,\n  CHANGE_USER_PASSWORD_SENDING,\n  CHANGE_USER_PASSWORD_SUCCESS,\n  CHANGE_USER_PASSWORD_ERROR,\n} from './types';\n\nconst defaultAuthenticationState = {\n  clientCredentials: null,\n  errorMessage: null,\n  isAuthenticated: false,\n  isAuthenticationError: false,\n  isError: false,\n  isLoading: false,\n};\n\nconst defaultPasswordResetRequestValues = {\n  isSending: false,\n  sent: false,\n  error: null,\n};\n\nconst defaultResetPasswordValues = {\n  isSending: false,\n  sent: false,\n  error: null,\n};\n\nconst defaultChangePasswordValues = {\n  isSending: false,\n  sent: false,\n  error: null,\n};\n\nconst defaultRegistrationValues = {\n  isLoading: false,\n  success: false,\n  error: null,\n};\n\nexport const initialUserState = {\n  authenticationState: defaultAuthenticationState,\n  passwordResetRequest: defaultPasswordResetRequestValues,\n  resetPassword: defaultResetPasswordValues,\n  changePassword: defaultChangePasswordValues,\n  groups: [],\n};\n\nexport default produce((state: Draft<AppState['user']>, action) => {\n  switch (action.type) {\n    case LOGOUT_USER: {\n      return initialUserState;\n    }\n    case LOGIN_USER:\n    case SET_AUTHENTICATION_STATE: {\n      if (!action.authenticationState) {\n        action.authenticationState = defaultAuthenticationState;\n      }\n\n      const {\n        authenticationState: {\n          clientCredentials = null,\n          errorMessage = null,\n          isAuthenticated,\n          isAuthenticationError = false,\n          isError = false,\n          isLoading = action.type === LOGIN_USER,\n        },\n        user,\n      } = action;\n\n      if (user) {\n        user.name =\n          `${user.firstName}${user.lastName ? ` ${user.lastName}` : ''}` ||\n          null;\n        user.isZengentiStaff = user.email.includes('@zengenti.com');\n      }\n\n      state = {\n        ...initialUserState,\n        ...(user || state),\n        authenticationState: {\n          clientCredentials,\n          errorMessage,\n          isAuthenticated:\n            isAuthenticated || state?.authenticationState?.isAuthenticated,\n          isAuthenticationError,\n          isError,\n          isLoading,\n        },\n      };\n      return state;\n    }\n    // REGISTER_USER is the trigger to set the user.registration initial state\n    // and will set user.registration.isLoading to true\n    // REGISTER_USER_FAILED will unset user.registration.isLoading and will set\n    // the value in user.registration.error\n    // REGISTER_USER_SUCCESS will unset user.registration.isLoading and will\n    // set user.registration to the created user from the api response\n    case REGISTER_USER:\n    case REGISTER_USER_FAILED:\n    case REGISTER_USER_SUCCESS: {\n      const { error, user } = action;\n\n      // Set registration object from the supplied action.user\n      // so we can call these values back later\n      state.registration = (user ||\n        state.registration ||\n        defaultRegistrationValues) as typeof defaultRegistrationValues;\n\n      // Set registration flags so the UI can track the status\n      state.registration.success = action.type === REGISTER_USER_SUCCESS;\n      state.registration.error = error || false;\n      state.registration.isLoading = action.type === REGISTER_USER;\n      return;\n    }\n    case REQUEST_USER_PASSWORD_RESET_SENDING:\n      state.passwordResetRequest = defaultPasswordResetRequestValues;\n      state.passwordResetRequest.isSending = true;\n      return;\n    case REQUEST_USER_PASSWORD_RESET_SUCCESS:\n      if (state.passwordResetRequest) {\n        state.passwordResetRequest.isSending = false;\n        state.passwordResetRequest.sent = true;\n      }\n      return;\n    case REQUEST_USER_PASSWORD_RESET_ERROR:\n      if (state.passwordResetRequest) {\n        state.passwordResetRequest.isSending = false;\n        state.passwordResetRequest.error = action.error;\n      }\n      return;\n    case RESET_USER_PASSWORD_SENDING:\n      if (state.resetPassword) {\n        state.resetPassword.isSending = true;\n      }\n      return;\n    case RESET_USER_PASSWORD_SUCCESS:\n      if (state.resetPassword) {\n        state.resetPassword.isSending = false;\n        state.resetPassword.sent = true;\n      }\n      return;\n    case RESET_USER_PASSWORD_ERROR:\n      if (state.resetPassword) {\n        state.resetPassword.isSending = false;\n        state.resetPassword.error = action.error;\n      }\n      return;\n    case CHANGE_USER_PASSWORD_SENDING:\n      if (state.changePassword) {\n        state.changePassword.isSending = true;\n      }\n      return;\n    case CHANGE_USER_PASSWORD_SUCCESS:\n      if (state.changePassword) {\n        state.changePassword.isSending = false;\n        state.changePassword.sent = true;\n      }\n      return;\n    case CHANGE_USER_PASSWORD_ERROR:\n      if (state.changePassword) {\n        state.changePassword.isSending = false;\n        state.changePassword.error = action.error;\n      }\n      return;\n    default:\n      return;\n  }\n}, initialUserState);\n"],"names":["ACTION_PREFIX","VALIDATE_USER","SET_AUTHENTICATION_STATE","LOGIN_USER","LOGIN_SUCCESSFUL","LOGIN_FAILED","LOGOUT_USER","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","REQUEST_USER_PASSWORD_RESET","RESET_USER_PASSWORD","REQUEST_USER_PASSWORD_RESET_SENDING","REQUEST_USER_PASSWORD_RESET_SUCCESS","REQUEST_USER_PASSWORD_RESET_ERROR","RESET_USER_PASSWORD_SENDING","RESET_USER_PASSWORD_SUCCESS","RESET_USER_PASSWORD_ERROR","CHANGE_USER_PASSWORD","CHANGE_USER_PASSWORD_SENDING","CHANGE_USER_PASSWORD_SUCCESS","CHANGE_USER_PASSWORD_ERROR","defaultAuthenticationState","clientCredentials","errorMessage","isAuthenticated","isAuthenticationError","isError","isLoading","defaultPasswordResetRequestValues","isSending","sent","error","defaultResetPasswordValues","defaultChangePasswordValues","defaultRegistrationValues","success","initialUserState","authenticationState","passwordResetRequest","resetPassword","changePassword","groups","produce","state","action","type","user","name","firstName","lastName","isZengentiStaff","email","includes","registration"],"mappings":"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"}